from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.constants import ParseMode
from telegram.ext import (
    CallbackQueryHandler,
    ContextTypes,
    MessageHandler,
    filters,
)

from constants import *
from utils import asleep

from blocks.intro import block1_intro, block2_intro, block3_intro, block4_intro, block5_intro
from blocks.block_finish import block1_final, block1_finish_1


async def block1_introduction_surname(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """Select an action: Adding parent/child or show data."""

    context.user_data[USER_DATA_NAME] = update.message.text
    text = '\n'.join([
        f'{context.user_data[USER_DATA_NAME]}, –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!',
        '–ü—Ä–µ–∂–¥–µ —á–µ–º –º—ã –Ω–∞—á–Ω—ë–º, —É –º–µ–Ω—è –µ—Å—Ç—å –µ—â—ë —Ç—Ä–∏ –≤–æ–ø—Ä–æ—Å–∞. '
        '–û–Ω–∏ –ø–æ–º–æ–≥—É—Ç –Ω–∞–º –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å –∞—É–¥–∏—Ç–æ—Ä–∏—é –∫—É—Ä—Å–∞ –∏ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞—Ç—å –µ–≥–æ.',
        '',
        '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é.'
    ])

    await update.message.reply_text(text)

    return BLOCK1_INTRODUCTION_EMAIL


async def block1_introduction_email(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """Select an action: Adding parent/child or show data."""

    context.user_data[USER_DATA_SURNAME] = update.message.text

    text = '\n'.join([
        '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à email.',
        '–ú—ã –Ω–µ –±—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞–º —Ä–∞—Å—Å—ã–ª–∫–∏, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –Ω—É–∂–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏.'
    ])
    await update.message.reply_text(text)

    return BLOCK1_INTRODUCTION_SPECIALITY


async def block1_introduction_speciality(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """Select an action: Adding parent/child or show data."""

    context.user_data[USER_DATA_EMAIL] = update.message.text

    text = '\n'.join([
        '–í –∫–∞–∫–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —É –≤–∞—Å –µ—Å—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞?'
    ])
    await update.message.reply_text(text)

    return BLOCK1_INTRODUCTION_LEVEL


async def block1_introduction_level(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """Select an action: Adding parent/child or show data."""

    context.user_data[USER_DATA_SPECIALITY] = update.message.text

    text = '\n'.join([
        '–ö–∞–∫ –±—ã –≤—ã –æ—Ü–µ–Ω–∏–ª–∏ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å?',
        '',
        '<b>–î–∂—É–Ω</b> ‚Äî –Ω–∞—á–∏–Ω–∞—é—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç. –í–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ–ª–µ–µ –æ–ø—ã—Ç–Ω–æ–≥–æ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞.',
        '<b>M–∏–¥–ª</b> ‚Äî –æ–ø—ã—Ç–Ω—ã–π –ø—Ä–æ—Ñ–∏, –Ω–µ –º–µ–Ω–µ–µ 2‚Äì3 –ª–µ—Ç –≤ —Å—Ñ–µ—Ä–µ. –ú–æ–∂–µ—Ç–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ—à–∏—Ç—å –≤—Å–µ —Ä–∞–±–æ—á–∏–µ –∑–∞–¥–∞—á–∏.',
        '<b>–°–∏–Ω—å–æ—Ä</b> ‚Äî –±–æ–ª—å—à–µ 3 –ª–µ—Ç –≤ —Å—Ñ–µ—Ä–µ. –†–µ—à–∏—Ç–µ –ª—é–±—É—é —Å–ª–æ–∂–Ω—É—é –∏ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∑–∞–¥–∞—á—É.',
    ])
    buttons = [
        [
            InlineKeyboardButton(text=JUNIOR, callback_data='JUNIOR'),
            InlineKeyboardButton(text=MIDDLE, callback_data='MIDDLE'),
            InlineKeyboardButton(text=SENIOR, callback_data='SENIOR'),
        ],
    ]
    keyboard = InlineKeyboardMarkup(buttons)
    await update.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

    return BLOCK1_INTRODUCTION_EXPECTATIONS


async def block1_introduction_expectations(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """Select an action: Adding parent/child or show data."""

    query = update.callback_query
    await query.answer()
    context.user_data[USER_DATA_EXPERIENCE] = query.data

    text = '\n'.join([
        '–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å: —á—Ç–æ –≤—ã –æ–∂–∏–¥–∞–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—Å–∞?',
        '–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.',
    ])
    await context.bot.send_message(chat_id=update.effective_chat.id, text=text)

    return BLOCK1_INTRODUCTION_SUMMARY_1


async def block1_introduction_summary_1(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    context.user_data[USER_DATA_EXPECTATIONS] = update.message.text

    text = '\n'.join([
        '–°–ø–∞—Å–∏–±–æ, —Ç–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.',
        '',
        '–†–∞—Å—Å–∫–∞–∂—É –≤–∞–º –ø—Ä–æ –æ–±—É—á–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ. –ù–∞ –∫—É—Ä—Å–µ –≤—ã —É–∑–Ω–∞–µ—Ç–µ:',
        'üìå–≤ —á—ë–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è –≤ –æ–Ω–ª–∞–π–Ω–µ –∏ –æ–±—É—á–µ–Ω–∏—è –≤–∑—Ä–æ—Å–ª—ã—Ö;',
        'üìå–∏–∑ –∫–∞–∫–∏—Ö —ç—Ç–∞–ø–æ–≤ —Å–æ—Å—Ç–æ–∏—Ç —Ä–∞–±–æ—Ç–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è;',
        'üìå—á—Ç–æ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å –Ω–∞ –∫–∞–∂–¥–æ–º –∏–∑ —ç—Ç–∞–ø–æ–≤.',
        '',
        '–Ø –±—É–¥—É –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º –æ–ø—ã—Ç–æ–º, –Ω–æ —Å—á–∏—Ç–∞—é –≤–∞–∂–Ω—ã–º –¥–æ–Ω–µ—Å—Ç–∏ –Ω–µ —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –º—ã—Å–ª–∏. '
        '–ü–æ—ç—Ç–æ–º—É –±—É–¥—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–µ –º–æ–∏—Ö –¥—Ä—É–∑–µ–π-–æ–±—Ä–∞–∑–æ–≤–∞–Ω—Ü–µ–≤. '
        '–¢–∞–∫–æ–π —Ä–∞–∑–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π –≤–∑–≥–ª—è–¥ –Ω–∞ –ø—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è –∫–∞–∂–µ—Ç—Å—è –º–Ω–µ –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã–º.',
    ])

    button_text = '–ó–∞ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è —è –ø—Ä–æ–π–¥—É –∫—É—Ä—Å?'
    keyboard = InlineKeyboardMarkup([[InlineKeyboardButton(text=button_text, callback_data=DUMMY)]])

    await update.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_INTRODUCTION_SUMMARY_2


async def block1_introduction_summary_2(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()
    text = '\n'.join([
        '–ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –≤—Å–µ–≥–æ –∫—É—Ä—Å–∞ –∑–∞–π–º—ë—Ç –æ–∫–æ–ª–æ 2‚Äì3 —á–∞—Å–æ–≤.',
        '–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ –µ–≥–æ –∑–∞ –æ–¥–∏–Ω –≤–µ—á–µ—Ä, –∞ –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –≤ —Å–≤–æ—ë–º —Ç–µ–º–ø–µ.',
        '',
        '–í—ã –≥–æ—Ç–æ–≤—ã?',
    ])

    button_text = '–í–ø–µ—Ä–µ–¥!'
    keyboard = InlineKeyboardMarkup([[InlineKeyboardButton(text=button_text, callback_data=DUMMY)]])

    await update.callback_query.message.reply_text(text=text, reply_markup=keyboard)

    return BLOCK1_INTRODUCTION_SUMMARY_3


async def block1_introduction_summary_3(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '–û—Ç–ª–∏—á–Ω–æ. –ü–æ–≥–æ–≤–æ—Ä–∏–º –æ —Ç–æ–º, –∫—Ç–æ —Ç–∞–∫–æ–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –≤ –æ–Ω–ª–∞–π–Ω–µ. '
        '–ö—Ç–æ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º? –ß—Ç–æ –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –∏ —É–º–µ—Ç—å?',
        '',
        '–ú–æ–π –¥—Ä—É–≥ –∏ —ç–∫—Å–ø–µ—Ä—Ç –ù–µ—Ç–æ–ª–æ–≥–∏–∏ –ï–≤–≥–µ–Ω–∏–π –ö–æ—Ä—ã—Ç–æ–≤ –∫–ª–∞—Å—Å–Ω–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –æ–± —ç—Ç–æ–º.',
    ])
    await update.callback_query.message.reply_text(text=text)

    await asleep(4)

    await context.bot.copy_message(chat_id=update.effective_chat.id, from_chat_id=MEDIA_CHANNEL_ID,
                                   message_id=MEDIA_BLOCK1_VIDEO_1)
    await asleep(7)

    text = '\n'.join([
        '–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å, –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. '
        '–ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ. '
        '–í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å ‚Äî –º–Ω–æ–≥–æ—Ä—É–∫–∏–π –®–∏–≤–∞: —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É, '
        '–ø–∏—à–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –∑–∞–Ω—è—Ç–∏–π, –ø—Ä–æ–≤–æ–¥–∏—Ç –∏—Ö, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ–º–∞—à–∫–∏ –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.',
    ])

    button_text = '–ê —á—Ç–æ, –±—ã–≤–∞–µ—Ç –ø–æ-–¥—Ä—É–≥–æ–º—É?'
    keyboard = InlineKeyboardMarkup([[InlineKeyboardButton(text=button_text, callback_data=DUMMY)]])

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_INTRODUCTION_SUMMARY_4


async def block1_introduction_summary_4(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = """–î–∞, –≤—Å—ë –≤–æ–∑–º–æ–∂–Ω–æ :)

–í –ù–µ—Ç–æ–ª–æ–≥–∏–∏ –∏ –º–Ω–æ–≥–∏—Ö –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–∞–Ω–∏—è—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –≤—ã–±–∏—Ä–∞—é—Ç –æ–¥–Ω—É —É–∑–∫—É—é —Ä–æ–ª—å –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é. –ù–∞–ø—Ä–∏–º–µ—Ä, —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è—é—Ç —Ä–∞–±–æ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–ª–∏ –≤–µ–¥—É—Ç –ª–µ–∫—Ü–∏–∏.

–ú–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –≤–∞–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ —Ä–æ–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –≤ –ù–µ—Ç–æ–ª–æ–≥–∏–∏. –≠—Ç–æ –∑–∞–π–º–µ—Ç –ø–∞—Ä—É –º–∏–Ω—É—Ç –∏ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ª—É—á—à–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Ç–æ–º, —á—Ç–æ –æ–±—ã—á–Ω–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å.

–ú–æ–∂–µ–º –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–≥–æ–≤–æ—Ä—É –æ —Ç–æ–º, –∫–∞–∫ —É—á–∞—Ç—Å—è –≤–∑—Ä–æ—Å–ª—ã–µ."""

    buttons = [[
        InlineKeyboardButton(text='–•–æ—á—É —É–∑–Ω–∞—Ç—å —Ä–æ–ª–∏', callback_data=ANSWER_1),
    ], [
        InlineKeyboardButton(text='–ü—Ä–æ–ø—É—Å—Ç–∏–º', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_INTRODUCTION_ROLES_1


async def block1_introduction_roles_1(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    await context.bot.copy_message(chat_id=update.effective_chat.id, from_chat_id=MEDIA_CHANNEL_ID,
                                   message_id=MEDIA_PHOTO_1)

    text = '\n'.join([
        '<b>–ú–µ—Ç–æ–¥–∏—Å—Ç –∏–ª–∏ –∞–≤—Ç–æ—Ä</b> —Å–æ–∑–¥–∞—ë—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –∑–∞–Ω—è—Ç–∏–π: '
        '–ø—Ä–æ–¥—É–º—ã–≤–∞–µ—Ç, —á—Ç–æ –∏ –≤ –∫–∞–∫–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º—ã –±—É–¥–µ–º —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å '
        '—Å—Ç—É–¥–µ–Ω—Ç—É, –∫–∞–∫–∏–µ –ø–æ–¥–±–µ—Ä—ë–º –ø—Ä–∏–º–µ—Ä—ã –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è.',
        '',
        '<b>–õ–µ–∫—Ç–æ—Ä</b> –ø—Ä–æ–≤–æ–¥–∏—Ç –æ–Ω–ª–∞–π–Ω-–∑–∞–Ω—è—Ç–∏—è –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ '
        '–≤—Ä–µ–º–µ–Ω–∏ ‚Äî –≤–µ–±–∏–Ω–∞—Ä—ã. –ï—â—ë –ª–µ–∫—Ç–æ—Ä –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —É—á–∞—Å—Ç–∏–µ '
        '–≤ –∑–∞–ø–∏—Å–∏ –≤–∏–¥–µ–æ–ª–µ–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç—É–¥–µ–Ω—Ç—ã —Å–º–æ—Ç—Ä—è—Ç –≤ –ª—é–±–æ–µ '
        '—É–¥–æ–±–Ω–æ–µ –¥–ª—è –Ω–∏—Ö –≤—Ä–µ–º—è.',
        '',
        '<b>–¢—Ä–µ–Ω–µ—Ä</b> –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ–º–∞—à–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –¥–∞—ë—Ç '
        '–ø–æ–¥—Ä–æ–±–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –≤ –ø–∏—Å—å–º–µ–Ω–Ω–æ–º –≤–∏–¥–µ.',
        '',
        '<b>–î–∏–ø–ª–æ–º–Ω—ã–π —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å</b> –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã '
        '—Å—Ç—É–¥–µ–Ω—Ç–æ–≤ ‚Äî –¥–∏–ø–ª–æ–º–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã. –¢–∞–∫–∂–µ –æ–Ω –º–æ–∂–µ—Ç '
        '–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∏–ø–ª–æ–º–∞.',
    ])

    buttons = [[
        InlineKeyboardButton(text='–ö—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º?', callback_data='d'),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard,
                                                   parse_mode=ParseMode.HTML)

    return BLOCK1_INTRODUCTION_ROLES_2


async def block1_introduction_roles_2(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '–≠–∫—Å–ø–µ—Ä—Ç—ã –≤ –ù–µ—Ç–æ–ª–æ–≥–∏–∏, –∫–∞–∫ –∏ –≤–æ –º–Ω–æ–≥–∏—Ö –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏—è—Ö, '
        '–Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ –æ–¥–∏–Ω–æ—á–∫—É. –†–∞—Å—Å–∫–∞–∂—É –≤–∞–º –æ –∫–æ–º–∞–Ω–¥–µ, '
        '—Å –∫–æ—Ç–æ—Ä–æ–π —ç–∫—Å–ø–µ—Ä—Ç —á–∞—â–µ –≤—Å–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç.',
    ])
    await update.callback_query.message.reply_text(text=text)

    await asleep(3)

    await context.bot.copy_message(chat_id=update.effective_chat.id, from_chat_id=MEDIA_CHANNEL_ID,
                                   message_id=MEDIA_PHOTO_2)

    text = '\n'.join([
        '<b>–ú–µ—Ç–æ–¥–∏—Å—Ç</b> –∑–Ω–∞–µ—Ç, –∫–∞–∫ —É—á–∞—Ç—Å—è –ª—é–¥–∏. '
        '–ú–æ–∂–µ—Ç —Å–∫–∞–∑–∞—Ç—å, –≥–¥–µ —Å—Ç—É–¥–µ–Ω—Ç—ã —É—Å—Ç–∞–Ω—É—Ç –∏–ª–∏ –æ—Ç–≤–ª–µ–∫—É—Ç—Å—è, '
        '–∫–∞–∫ –º–æ–∂–Ω–æ —ç—Ç–æ–≥–æ –∏–∑–±–µ–∂–∞—Ç—å –∏ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–º. '
        '–ü–æ–º–æ–∂–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –µ–≥–æ –ø–æ–¥–∞—Ç—å, –ø—Ä–∏–¥—É–º–∞—Ç—å –ø—Ä–∞–∫—Ç–∏–∫—É –∫ —Ç–µ–æ—Ä–∏–∏.',
        '',
        '<b>–ü—Ä–æ–¥—é—Å–µ—Ä</b> –æ—Ç–≤–µ—á–∞–µ—Ç –≥–æ–ª–æ–≤–æ–π –∑–∞ –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –µ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ '
        '–∑–∞–ø—Ä–æ—Å–∞–º —Ä—ã–Ω–∫–∞ –∏ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π. –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –≤—Å–µ —Å—Ä–æ–∫–∏, —Å—Ç–∞–≤–∏—Ç '
        '–∑–∞–¥–∞—á–∏ –∫–æ–º–∞–Ω–¥–µ, —Å–ª–µ–¥–∏—Ç –∑–∞ –∫–∞—á–µ—Å—Ç–≤–æ–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –º–µ—Ç—Ä–∏–∫–∞–º –ø—Ä–æ–¥—É–∫—Ç–∞.',
    ])

    await context.bot.send_message(chat_id=update.effective_chat.id, text=text, parse_mode=ParseMode.HTML)

    await asleep(5)

    text = '\n'.join([
        '<b>–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä</b> –ø–æ–º–æ–≥–∞–µ—Ç —ç–∫—Å–ø–µ—Ä—Ç—É –≤ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ –∑–∞–Ω—è—Ç–∏—è ‚Äì '
        '–∑–∞–ø—É—Å–∫–∞–µ—Ç –Ω–∞—á–∞–ª–æ –∑–∞–Ω—è—Ç–∏—è –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ, –ø–æ–º–æ–≥–∞–µ—Ç –æ–±—â–∞—Ç—å—Å—è —Å–æ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏.',
        '',
        '<b>–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ —Ä–∞–±–æ—Ç–µ —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏</b> –ø–æ–º–æ–∂–µ—Ç –Ω–æ–≤–æ–º—É —ç–∫—Å–ø–µ—Ä—Ç—É '
        '–≤–ª–∏—Ç—å—Å—è –≤ –∫–æ–º–∞–Ω–¥—É, –ø–æ–≥—Ä—É–∑–∏—Ç –≤–æ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∫–æ–º–ø–∞–Ω–∏–∏, –æ–±—ä—è—Å–Ω–∏—Ç, '
        '–∫ –∫–æ–º—É –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ —Å–æ–≤–µ—Ç–æ–º –∏–ª–∏ –ø–æ–º–æ—â—å—é. –û—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤—Å–µ '
        '–≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω–∞–ø—Ä–∞–≤–∏—Ç –∫ –Ω—É–∂–Ω—ã–º –∫–æ–ª–ª–µ–≥–∞–º. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏.',
        '',
        '–ù–æ —á—Ç–æ –º—ã –≤—Å–µ –æ —Å–µ–±–µ? –°–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ–¥—É–º–∞—Ç—å –æ —Å—Ç—É–¥–µ–Ω—Ç–∞—Ö! '
        '–ö–∞–∫ –¥—É–º–∞–µ—Ç–µ, –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –ª–∏ –æ–±—É—á–µ–Ω–∏–µ –≤ –æ–Ω–ª–∞–π–Ω–µ –æ—Ç –æ—Ñ–ª–∞–π–Ω–∞?'
    ])
    buttons = [[
        InlineKeyboardButton(text='–î–∞', callback_data=ANSWER_1),
        InlineKeyboardButton(text='–ù–µ–º–Ω–æ–≥–æ', callback_data=ANSWER_2),
        InlineKeyboardButton(text='–ù–µ—Ç', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard, disable_web_page_preview=True,
                                                   parse_mode=ParseMode.HTML)

    return BLOCK1_QUIZ_2


async def block1_quiz_1(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '–°–æ–≥–ª–∞—Å–µ–Ω, —á—Ç–æ –º—ã –≤—Å–µ –æ —Å–µ–±–µ? –°–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ–¥—É–º–∞—Ç—å –æ —Å—Ç—É–¥–µ–Ω—Ç–∞—Ö! –ö–∞–∫ –¥—É–º–∞–µ—Ç–µ, –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –ª–∏ –æ–±—É—á–µ–Ω–∏–µ –≤ '
        '–æ–Ω–ª–∞–π–Ω–µ –æ—Ç –æ—Ñ–ª–∞–π–Ω–∞?'
    ])
    buttons = [[
        InlineKeyboardButton(text='–î–∞', callback_data=ANSWER_1),
        InlineKeyboardButton(text='–ù–µ–º–Ω–æ–≥–æ', callback_data=ANSWER_2),
        InlineKeyboardButton(text='–ù–µ—Ç', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_QUIZ_2


async def block1_quiz_2(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    if query.data == ANSWER_1:
        text = '–î–∞, –≤—ã –ø—Ä–∞–≤—ã. –†–∞–∑–±–µ—Ä—ë–º—Å—è, –≤ —á—ë–º –∂–µ –æ—Ç–ª–∏—á–∏—è. ' \
               '–ö–æ–≥–¥–∞ —É—á–∏—à—å—Å—è –≤ –æ–Ω–ª–∞–π–Ω–µ, –ª–µ–≥—á–µ –æ—Ç–≤–ª–µ–∫–∞—Ç—å—Å—è. ' \
               '–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, –≤—ã –≤–∫–ª—é—á–∞–µ—Ç–µ –≤–∏–¥–µ–æ–ª–µ–∫—Ü–∏—é –∏ —Ä–µ—à–∞–µ—Ç–µ ' \
               '–Ω–∞–ª–∏—Ç—å —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã, –ø–æ—Ç–æ–º –∑–∞–º–µ—á–∞–µ—Ç–µ –ø—ã–ª—å –Ω–∞ —Å—Ç–æ–ª–µ, ' \
               '–ø–æ—Ç–æ–º –ø—Ä–∏—Ö–æ–¥–∏—Ç –ø—É—à –∏–∑ —Ä–∞–±–æ—á–µ–≥–æ —á–∞—Ç–∞... –ò –≤–æ—Ç —É–∂–µ 10 ' \
               '–º–∏–Ω—É—Ç –ª–µ–∫—Ü–∏–∏ –ø—Ä–æ—à–ª–æ, –∞ –≤—ã –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç–µ —Å–µ–±—è –∑–∞ —Å–∫–∞–Ω–≤–æ—Ä–¥–æ–º ' \
               '–∏–ª–∏ –ø–µ—Ä–µ–ª–∏–≤–∞–Ω–∏–µ–º –∂–∏–¥–∫–æ—Å—Ç–µ–π –≤ –∫–æ–ª–±–æ—á–∫–∞—Ö –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ. –ü—Ä–∏ —ç—Ç–æ–º ' \
               '–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –Ω–µ –≤–∏–¥–µ—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞, –ø–æ—ç—Ç–æ–º—É –≤–µ—Ä–Ω—É—Ç—å –µ–≥–æ –≤–Ω–∏–º–∞–Ω–∏–µ —Å–ª–æ–∂–Ω–µ–µ.'
    else:
        text = '–°—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ç–ª–∏—á–∏—è –≤—Å—ë –∂–µ –µ—Å—Ç—å, –¥–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ ' \
               '–≤ –Ω–∏—Ö —Ä–∞–∑–±–µ—Ä—ë–º—Å—è. –ö–æ–≥–¥–∞ —É—á–∏—à—å—Å—è –≤ –æ–Ω–ª–∞–π–Ω–µ, –ª–µ–≥—á–µ ' \
               '–æ—Ç–≤–ª–µ–∫–∞—Ç—å—Å—è. –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, –≤—ã –≤–∫–ª—é—á–∞–µ—Ç–µ –≤–∏–¥–µ–æ–ª–µ–∫—Ü–∏—é –∏ ' \
               '—Ä–µ—à–∞–µ—Ç–µ –Ω–∞–ª–∏—Ç—å —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã, –ø–æ—Ç–æ–º –∑–∞–º–µ—á–∞–µ—Ç–µ –ø—ã–ª—å –Ω–∞ —Å—Ç–æ–ª–µ, ' \
               '–ø–æ—Ç–æ–º –ø—Ä–∏—Ö–æ–¥–∏—Ç –ø—É—à –∏–∑ —Ä–∞–±–æ—á–µ–≥–æ —á–∞—Ç–∞... –ò –≤–æ—Ç —É–∂–µ 10 –º–∏–Ω—É—Ç ' \
               '–ª–µ–∫—Ü–∏–∏ –ø—Ä–æ—à–ª–æ, –∞ –≤—ã –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç–µ —Å–µ–±—è –∑–∞ —Å–∫–∞–Ω–≤–æ—Ä–¥–æ–º –∏–ª–∏ ' \
               '–ø–µ—Ä–µ–ª–∏–≤–∞–Ω–∏–µ–º –∂–∏–¥–∫–æ—Å—Ç–µ–π –≤ –∫–æ–ª–±–æ—á–∫–∞—Ö –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ. –ü—Ä–∏ —ç—Ç–æ–º ' \
               '–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –Ω–µ –≤–∏–¥–µ—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞, –ø–æ—ç—Ç–æ–º—É –≤–µ—Ä–Ω—É—Ç—å –µ–≥–æ –≤–Ω–∏–º–∞–Ω–∏–µ —Å–ª–æ–∂–Ω–µ–µ.'

    await update.callback_query.message.reply_text(text=text)

    await asleep(10)

    text = '\n'.join([
        '–í –æ–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç —á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ, '
        '–æ—Ç–æ—Ä–≤–∞–Ω–æ –æ—Ç –≥—Ä—É–ø–ø—ã. –ï–º—É —Å–ª–æ–∂–Ω–µ–µ –∞–∫—Ç–∏–≤–Ω–æ –≤–∫–ª—é—á–∞—Ç—å—Å—è: –∑–∞–¥–∞–≤–∞—Ç—å '
        '–≤–æ–ø—Ä–æ—Å—ã, —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è –≤ –Ω–æ–≤—ã—Ö –ø–æ–Ω—è—Ç–∏—è—Ö. –≠—Ç–æ —Å–∏–ª—å–Ω–æ –≤–ª–∏—è–µ—Ç –Ω–∞ '
        '–º–æ—Ç–∏–≤–∞—Ü–∏—é, –æ–Ω–∞ –ø–∞–¥–∞–µ—Ç, –∏ —á–µ–ª–æ–≤–µ–∫—É —Å–ª–æ–∂–Ω–µ–µ –¥–æ—Å—Ç–∏–≥–∞—Ç—å —Ü–µ–ª–µ–π –æ–±—É—á–µ–Ω–∏—è. '
        '–ö–ª–∞—Å—Å–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –∑–Ω–∞—é—Ç —ç—Ç—É –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞—Ä–∞—é—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å '
        '—Å—Ä–µ–¥—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ —É—á–∏—Ç—å—Å—è.'
    ])
    buttons = [[
        InlineKeyboardButton(text='–ù–æ –≤–µ–¥—å —É –æ–Ω–ª–∞–π–Ω–∞ –µ—Å—Ç—å –∏ –ø–ª—é—Å—ã?', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_QUIZ_3


async def block1_quiz_3(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '–î–∞. –î—É–º–∞—é, –æ–Ω–∏ —É–∂–µ –ø—Ä–∏—à–ª–∏ –≤–∞–º –≤ –≥–æ–ª–æ–≤—É :)',
        '',
        '–ù–µ –Ω—É–∂–Ω–æ —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –¥–æ—Ä–æ–≥—É: –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç–µ –≥–ª–∞–∑–∞ '
        '‚Äî –∏ –≤–∞–º —Å—Ä–∞–∑—É –¥–æ—Å—Ç—É–ø–µ–Ω —Å–≤–µ—Ç —É—á–µ–Ω—å—è. –ë–æ–ª—å—à–µ –Ω–µ—Ç '
        '–ø—Ä–∏–≤—è–∑–∫–∏ –∫ –≥–µ–æ–≥—Ä–∞—Ñ–∏–∏. –ú–Ω–æ–≥–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø—Ä–µ–ø–æ–¥–∞—é—Ç –≤ –æ–Ω–ª–∞–π–Ω–µ '
        '–¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –∏ —Å—Ç—Ä–∞–Ω.',
        '',
        '–õ–µ–≥—á–µ –ø–æ–¥—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –ø–æ–¥ —É—á–µ–±—É ‚Äî –º–Ω–æ–≥–∏–µ –≤–µ—â–∏ –º–æ–∂–Ω–æ '
        '–æ—Å–≤–∞–∏–≤–∞—Ç—å —Å–∞–º–æ–º—É –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è. ',
        '',
        '–°–æ–≥–ª–∞—Å–∏—Ç–µ—Å—å, –ø–ª—é—Å—ã –æ—á–µ–Ω—å –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ?'
    ])
    buttons = [[
        InlineKeyboardButton(text='–ê —á—Ç–æ —Å –º–∏–Ω—É—Å–∞–º–∏ –¥–µ–ª–∞—Ç—å?', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_QUIZ_4


async def block1_quiz_4(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = """–ù–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –º—ã –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –æ—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ –≤—Å–µ–≥–æ –∫—É—Ä—Å–∞. –°–µ–π—á–∞—Å –Ω–∞–º –≤–∞–∂–Ω–æ –∑–∞–ø–æ–º–Ω–∏—Ç—å, —á–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ–±—É—á–µ–Ω–∏–µ –≤ –æ–Ω–ª–∞–π–Ω–µ. 

–ö—Å—Ç–∞—Ç–∏, —á–µ–º? 

1 ‚Äì —Å—Ç—É–¥–µ–Ω—Ç –Ω–µ –≤—Å–µ–≥–¥–∞ –ø–æ–Ω–∏–º–∞–µ—Ç, –∑–∞—á–µ–º –æ–Ω —É—á–∏—Ç—Å—è –∏ —á–µ–≥–æ —Ö–æ—á–µ—Ç –¥–æ—Å—Ç–∏—á—å 
2 ‚Äì —Å—Ç—É–¥–µ–Ω—Ç —á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ, –ø–æ—ç—Ç–æ–º—É —Å–ª–æ–∂–Ω–µ–µ –≤–∫–ª—é—á–∞—Ç—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è 
3 ‚Äì —Å—Ç—É–¥–µ–Ω—Ç —Å—á–∏—Ç–∞–µ—Ç –æ–±—É—á–µ–Ω–∏–µ –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º 
4 ‚Äì —Å—Ç—É–¥–µ–Ω—Ç—É —Å–ª–æ–∂–Ω–µ–µ —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –º–Ω–æ–≥–æ –æ—Ç–≤–ª–µ–∫–∞—é—â–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤"""

    buttons = [[
        InlineKeyboardButton(text='1 –∏ 3', callback_data=ANSWER_2),
        InlineKeyboardButton(text='2 –∏ 4', callback_data=ANSWER_1),
    ], [
        InlineKeyboardButton(text='1 –∏ 4', callback_data=ANSWER_2),
        InlineKeyboardButton(text='2 –∏ 3', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_QUIZ_5


async def block1_quiz_5(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    if query.data == ANSWER_1:
        text = '\n'.join([
            '–í–µ—Ä–Ω–æ! –û—Å–æ–∑–Ω–∞—Ç—å —Ü–µ–ª—å –æ–±—É—á–µ–Ω–∏—è –≤–∞–∂–Ω–æ –∏ –≤ –æ–Ω–ª–∞–π–Ω–µ, –∏ –≤ –æ—Ñ–ª–∞–π–Ω–µ. '
            '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è, –∫–∞–∫ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, '
            '–Ω–∞–ø—Ä–∏–º–µ—Ä <a href="https://iq.hse.ru/news/217043836.html/">–æ—Ç –¶–µ–Ω—Ç—Ä–∞ '
            '—Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏ –ù–ò–£ –í–®–≠</a>, —Ç–∞–∫–∂–µ –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ñ–æ—Ä–º–∞—Ç–∞.',
        ])
    else:
        text = '\n'.join([
            '–ù–µ —Å–æ–≤—Å–µ–º. –°—Ç—É–¥–µ–Ω—Ç—É –ø—Ä–∞–≤–¥–∞ —Å–ª–æ–∂–Ω–µ–µ —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –∏ –≤–∫–ª—é—á–∞—Ç—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è.',
            '',
            '–û—Å–æ–∑–Ω–∞—Ç—å —Ü–µ–ª—å –æ–±—É—á–µ–Ω–∏—è –≤–∞–∂–Ω–æ –∏ –≤ –æ–Ω–ª–∞–π–Ω–µ, –∏ –≤ –æ—Ñ–ª–∞–π–Ω–µ. '
            '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è, –∫–∞–∫ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, '
            '–Ω–∞–ø—Ä–∏–º–µ—Ä <a href="https://iq.hse.ru/news/217043836.html/">–æ—Ç –¶–µ–Ω—Ç—Ä–∞ '
            '—Å–æ—Ü–∏–æ–ª–æ–≥–∏–∏ –ù–ò–£ –í–®–≠</a>, —Ç–∞–∫–∂–µ –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ñ–æ—Ä–º–∞—Ç–∞.'
        ])
    await update.callback_query.message.reply_text(text=text, disable_web_page_preview=True, parse_mode=ParseMode.HTML)

    await asleep(10)

    text = '\n'.join([
        '–ö—Ä–æ–º–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –æ–±—É—á–µ–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é –≤–∞–∂–Ω–æ '
        '–∑–Ω–∞—Ç—å, –∫–∞–∫ —É—á–∞—Ç—Å—è –≤–∑—Ä–æ—Å–ª—ã–µ. –í–æ–ø—Ä–æ—Å–æ–º –æ–±—É—á–µ–Ω–∏—è –≤–∑—Ä–æ—Å–ª—ã—Ö '
        '–∑–∞–Ω–∏–º–∞–µ—Ç—Å—è —Ç–∞–∫–∞—è –Ω–∞—É–∫–∞, –∫–∞–∫ <b>–∞–Ω–¥—Ä–∞–≥–æ–≥–∏–∫–∞</b>.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ?', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

    return BLOCK1_QUIZ_6


async def block1_quiz_6(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    await context.bot.copy_message(chat_id=update.effective_chat.id, from_chat_id=MEDIA_CHANNEL_ID,
                                   message_id=MEDIA_PHOTO_3)
    text = '\n'.join([
        '<b>–ê–Ω–¥—Ä–∞–≥–æ–≥–∏–∫–∞</b> —Å–æ–æ–±—â–∞–µ—Ç –Ω–∞–º, —á—Ç–æ –º—ã—à–ª–µ–Ω–∏–µ –≤–∑—Ä–æ—Å–ª–æ–≥–æ –∏ –µ–≥–æ '
        '—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –æ–±—É—á–µ–Ω–∏—é —Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –æ—Ç –¥–µ—Ç–µ–π. '
        '–ü–æ—ç—Ç–æ–º—É –≤–∞–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∞–Ω–¥—Ä–∞–≥–æ–≥–∏–∫–∏.'
    ])
    await context.bot.send_message(chat_id=update.effective_chat.id, text=text, parse_mode=ParseMode.HTML)

    await asleep(5)

    text = '\n'.join([
        '–ü–æ–≥–æ–≤–æ—Ä–∏–º –æ –Ω–∏—Ö –ø–æ–¥—Ä–æ–±–Ω–µ–µ.',
        '',
        '<b>–ü–µ—Ä–≤—ã–π –ø—Ä–∏–Ω—Ü–∏–ø</b> ‚Äì –≤–∑—Ä–æ—Å–ª—ã–µ —Ö–æ—Ç—è—Ç —É—á–∏—Ç—å—Å—è —Ç–æ–º—É, '
        '—á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –∏—Ö —Ä–∞–±–æ—Ç–æ–π –∏–ª–∏ –ª–∏—á–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏. ',
        '',
        '–û–Ω–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –Ω–µ –∑–∞ –∑–Ω–∞–Ω–∏—è–º–∏ –∫–∞–∫ —Ç–∞–∫–æ–≤—ã–º–∏, –∞ –∑–∞ —Ä–µ—à–µ–Ω–∏–µ–º '
        '—Å–≤–æ–∏—Ö –ø—Ä–æ–±–ª–µ–º. –ë—É–¥–µ—Ç –∑–¥–æ—Ä–æ–≤–æ, –µ—Å–ª–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å '
        '—Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞ –ø–æ–ª—å–∑–µ –æ–±—É—á–µ–Ω–∏—è, —Å–≤—è–∑—ã–≤–∞—Ç—å –µ–µ —Å '
        '–ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ–º –ø–æ –∫–∞—Ä—å–µ—Ä–µ –∏–ª–∏ –ª–∏—á–Ω—ã–º —Ä–∞–∑–≤–∏—Ç–∏–µ–º.'
    ])
    buttons = [[
        InlineKeyboardButton(text='–ü–æ–ø—Ä–æ–±—É—é!',
                             callback_data=DUMMY),
    ], [
        InlineKeyboardButton(text='–£–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é —ç—Ç–æ', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

    return BLOCK1_QUIZ_7


async def block1_quiz_7(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '<b>–í—Ç–æ—Ä–æ–π –ø—Ä–∏–Ω—Ü–∏–ø</b> ‚Äì –æ–±—É—á–µ–Ω–∏–µ –≤–∑—Ä–æ—Å–ª—ã—Ö –¥–æ–ª–∂–Ω–æ '
        '—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ. –ù–µ—Ç ‚Äî –¥–ª–∏–Ω–Ω—ã–º –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–º —Ç–µ–æ—Ä–∏—è–º. –î–∞ ‚Äî —Ä–µ–∞–ª—å–Ω—ã–º –∫–µ–π—Å–∞–º!',
        '',
        '–î–ª—è —Ä–µ—à–µ–Ω–∏—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∑–∞–¥–∞—á, –∫–∞–∫ –ª–∏—á–Ω—ã—Ö, '
        '—Ç–∞–∫ –∏ —Ä–∞–±–æ—á–∏—Ö, –≤–∞–∂–Ω—ã –Ω–∞–≤—ã–∫–∏. –ò—Ö –º–æ–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å '
        '–∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –ø—Ä–∞–∫—Ç–∏–∫–∏, –ø–æ—ç—Ç–æ–º—É –æ–Ω–∞ —Ç–∞–∫ –≤–∞–∂–Ω–∞ –≤ –æ–±—É—á–µ–Ω–∏–∏ –≤–∑—Ä–æ—Å–ª—ã—Ö.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–ë—É–¥—É –≤–Ω–µ–¥—Ä—è—Ç—å –±–æ–ª—å—à–µ –ø—Ä–∞–∫—Ç–∏–∫–∏', callback_data=DUMMY),
    ], [
        InlineKeyboardButton(text='–°—Ç—Ä–æ—é —Å–≤–æ–∏ –∑–∞–Ω—è—Ç–∏—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ',
                             callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

    return BLOCK1_QUIZ_8


async def block1_quiz_8(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '<b>–¢—Ä–µ—Ç–∏–π –ø—Ä–∏–Ω—Ü–∏–ø</b> ‚Äì –Ω–µ–ª—å–∑—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–ø—ã—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞.',
        ' ',
        '–°—Ç—É–¥–µ–Ω—Ç—ã –º–æ–≥—É—Ç –Ω–µ –∏–º–µ—Ç—å '
        '–±–æ–≥–∞—Ç—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π –≤ –≤–∞—à–µ–π –æ–±–ª–∞—Å—Ç–∏, '
        '–Ω–æ —É –Ω–∏—Ö —Ç–æ—á–Ω–æ –µ—Å—Ç—å –±–∞–≥–∞–∂ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ –æ–ø—ã—Ç–∞. '
        '–û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –Ω–µ–º—É ‚Äì —Å–≤—è–∑—ã–≤–∞–π—Ç–µ –Ω–æ–≤—ã–π '
        '–º–∞—Ç–µ—Ä–∏–∞–ª —Å –ø–æ–Ω—è—Ç–Ω—ã–º–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞–º —è–≤–ª–µ–Ω–∏—è–º–∏.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∏–¥–µ—è!', callback_data=DUMMY),
    ], [
        InlineKeyboardButton(text='–í—Å–µ–≥–¥–∞ –ø—Ä–∞–∫—Ç–∏–∫—É—é —Ç–∞–∫–æ–π –ø—Ä–∏–µ–º!', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

    return BLOCK1_QUIZ_9


async def block1_quiz_9(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '<b>–ß–µ—Ç–≤–µ—Ä—Ç—ã–π –ø—Ä–∏–Ω—Ü–∏–ø</b> ‚Äì –≤–∑—Ä–æ—Å–ª—ã–µ –¥–æ–ª–∂–Ω—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å '
        '–≤ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ –æ—Ü–µ–Ω–∫–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è. ',
        '',
        '–û–Ω–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–≤–æ–∏ —Ü–µ–ª–∏ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –∏ '
        '–∂–µ–ª–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç –Ω–µ–≥–æ. –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é –≤–∞–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å '
        '—Ç–∞–∫—É—é –æ–±—Å—Ç–∞–Ω–æ–≤–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —Å—Ç—É–¥–µ–Ω—Ç –Ω–µ –±—É–¥–µ—Ç —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å '
        '—Å–µ–±—è –∑–∞–≤–∏—Å–∏–º—ã–º, –≤–µ–¥–æ–º—ã–º ‚Äì –Ω–∞–æ–±–æ—Ä–æ—Ç, –≥–¥–µ —Å—Ç—É–¥–µ–Ω—Ç —Å–º–æ–∂–µ—Ç '
        '–ø—Ä–æ—è–≤–ª—è—Ç—å —Å–≤–æ—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–ü–æ–¥—É–º–∞—é –Ω–∞–¥ —ç—Ç–∏–º', callback_data=DUMMY),
    ], [
        InlineKeyboardButton(text='–î–∞—é —Å—Ç—É–¥–µ–Ω—Ç–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—è–≤–∏—Ç—å —Å–µ–±—è', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

    return BLOCK1_QUIZ_10


async def block1_quiz_10(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '<b>–ü—è—Ç—ã–π –ø—Ä–∏–Ω—Ü–∏–ø</b> ‚Äì —Å–æ –≤–∑—Ä–æ—Å–ª—ã–º–∏ –Ω–∞–¥–æ –æ–±—â–∞—Ç—å—Å—è –Ω–∞ '
        '—Ä–∞–≤–Ω—ã—Ö.',
        ' ',
        '–ò–º –Ω–µ –Ω—É–∂–Ω–∞ –¥–∏–¥–∞–∫—Ç–∏–∫–∞ –∏ –Ω—Ä–∞–≤–æ—É—á–µ–Ω–∏—è '
        '(—Å–º–æ—Ç—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –≤—ã—à–µ –ø—Ä–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –æ–ø—ã—Ç), '
        '–æ–±—â–∞–π—Ç–µ—Å—å —Å –Ω–∏–º–∏ —Å –ø–æ–∑–∏—Ü–∏–∏ ¬´–≤–∑—Ä–æ—Å–ª—ã–π ‚Äî –≤–∑—Ä–æ—Å–ª—ã–π¬ª.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–î–∞, –¥–µ–ª–∞—é —Ç–∞–∫ –Ω–µ–æ—Å–æ–∑–Ω–∞–Ω–Ω–æ', callback_data=DUMMY),
    ], [
        InlineKeyboardButton(text='–í—Å–µ–≥–¥–∞ —Å–ª–µ–¥—É—é —ç—Ç–æ–º—É –ø—Ä–∏–Ω—Ü–∏–ø—É', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

    return BLOCK1_QUIZ_11


async def block1_quiz_11(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '–ü—Ä–æ–≤–µ—Ä–∏–º, –ø–æ–ª—É—á–∏–ª–æ—Å—å –ª–∏ —É –≤–∞—Å –∑–∞–ø–æ–º–Ω–∏—Ç—å '
        '–æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∞–Ω–¥—Ä–∞–≥–æ–≥–∏–∫–∏? –í—Å–µ '
        '–ø—Ä–æ—Å—Ç–æ ‚Äì —è –ø—Ä–∏—Å—ã–ª–∞—é –≤–∞–º —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, '
        '–µ—Å–ª–∏ –æ–Ω–æ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø—É, –≤—ã '
        '–æ—Ç–≤–µ—á–∞–µ—Ç–µ ¬´–ø—Ä–∞–≤–¥–∞¬ª, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äì ¬´–ª–æ–∂—å¬ª.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–í–ø–µ—Ä–µ–¥', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_QUIZ_12


async def block1_quiz_12(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '–í–∑—Ä–æ—Å–ª—ã–µ –ª—é–¥–∏ –Ω–µ –ª—é–±—è—Ç, '
        '–∫–æ–≥–¥–∞ –æ–±—Ä–∞—â–∞—é—Ç—Å—è –∫ –∏—Ö –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –æ–ø—ã—Ç—É. '
        '–û–Ω–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –∑–∞ –Ω–æ–≤—ã–º–∏ –∑–Ω–∞–Ω–∏—è–º–∏, –∞ –Ω–µ –∑–∞ '
        '–≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ –æ –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–ü—Ä–∞–≤–¥–∞', callback_data=ANSWER_1),
        InlineKeyboardButton(text='–õ–æ–∂—å', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_QUIZ_13


async def block1_quiz_13(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    if query.data == ANSWER_1:
        text = '\n'.join([
            '–ö–∞–∫ —Ä–∞–∑ –Ω–∞–æ–±–æ—Ä–æ—Ç! –í–∑—Ä–æ—Å–ª—ã–º –≤–∞–∂–Ω–æ, '
            '—á—Ç–æ–±—ã –∏—Ö –æ–ø—ã—Ç —É—á–∏—Ç—ã–≤–∞–ª–∏ –≤ –æ–±—É—á–µ–Ω–∏–∏.'
        ])
    else:
        text = '\n'.join([
            '–í–µ—Ä–Ω–æ! –í–∑—Ä–æ—Å–ª—ã–º –≤–∞–∂–Ω–æ, '
            '—á—Ç–æ–±—ã –∏—Ö –æ–ø—ã—Ç —É—á–∏—Ç—ã–≤–∞–ª–∏ –≤ –æ–±—É—á–µ–Ω–∏–∏.'
        ])

    await update.callback_query.message.reply_text(text=text)

    await asleep(2)

    text = '\n'.join([
        '–î–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö –≤ –æ–±—É—á–µ–Ω–∏–∏ –±–æ–ª–µ–µ '
        '–≤–∞–∂–Ω–æ –Ω–∞—É—á–∏—Ç—å—Å—è —Ä–µ—à–∞—Ç—å —Å–≤–æ–∏ –ª–∏—á–Ω—ã–µ '
        '–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏, –∞ –Ω–µ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–ü—Ä–∞–≤–¥–∞', callback_data=ANSWER_1),
        InlineKeyboardButton(text='–õ–æ–∂—å', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_QUIZ_14


async def block1_quiz_14(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    if query.data == ANSWER_1:
        text = '\n'.join([
            '–í–µ—Ä–Ω–æ! –ß–∞—â–µ –≤—Å–µ–≥–æ –≤–∑—Ä–æ—Å–ª—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç '
            '—É—á–∏—Ç—å—Å—è —Ç–æ–º—É, —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –∏—Ö '
            '–ª–∏—á–Ω—ã–º–∏ –∏–ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏.'
        ])
    else:
        text = '\n'.join([
            '–≠—Ç–æ –ø—Ä–∞–≤–¥–∞. –ß–∞—â–µ –≤—Å–µ–≥–æ –≤–∑—Ä–æ—Å–ª—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç '
            '—É—á–∏—Ç—å—Å—è —Ç–æ–º—É, —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –∏—Ö –ª–∏—á–Ω—ã–º–∏ '
            '–∏–ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏.'
        ])

    await update.callback_query.message.reply_text(text=text)

    await asleep(3)

    text = '\n'.join([
        '–ß–µ–º –±–æ–ª—å—à–µ —Ç–µ–æ—Ä–∏–∏ ‚Äì —Ç–µ–º –ª—É—á—à–µ! –í–∑—Ä–æ—Å–ª—ã–º '
        '–≤–∞–∂–Ω–æ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –ø–µ—Ä–µ–¥ –Ω–∏–º–∏ –Ω–∞—Å—Ç–æ—è—â–∏–π '
        '–∞–∫–∞–¥–µ–º–∏–∫ –∏ –¥–æ–∫—Ç–æ—Ä –Ω–∞—É–∫.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–ü—Ä–∞–≤–¥–∞', callback_data=ANSWER_1),
        InlineKeyboardButton(text='–õ–æ–∂—å', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_QUIZ_15


async def block1_quiz_15(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    if query.data == ANSWER_1:
        text = '\n'.join([
            '–≠—Ç–æ –ª–æ–∂—å. –ö–æ–Ω–µ—á–Ω–æ, –≤–∑—Ä–æ—Å–ª—ã–º –≤–∞–∂–Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è, '
            '—á—Ç–æ –ø–µ—Ä–µ–¥ –Ω–∏–º–∏ –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª –∏ —Å–æ–≤—Å–µ–º '
            '–±–µ–∑ —Ç–µ–æ—Ä–∏–∏ –æ–±–æ–π—Ç–∏—Å—å –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è. –û–¥–Ω–∞–∫–æ, —á–∞—â–µ '
            '–≤—Å–µ–≥–æ –æ–±—É—á–µ–Ω–∏–µ –≤–∑—Ä–æ—Å–ª—ã—Ö –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ '
            '–Ω–∞–≤—ã–∫–æ–≤, –ø–æ—ç—Ç–æ–º—É –ª—É—á—à–µ –¥–µ–ª–∞—Ç—å —É–ø–æ—Ä –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫—É.'
        ])
    else:
        text = '\n'.join([
            '–í–µ—Ä–Ω–æ! –≠—Ç–æ –ª–æ–∂—å. –ö–æ–Ω–µ—á–Ω–æ, –≤–∑—Ä–æ—Å–ª—ã–º –≤–∞–∂–Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è, '
            '—á—Ç–æ –ø–µ—Ä–µ–¥ –Ω–∏–º–∏ –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª –∏ —Å–æ–≤—Å–µ–º –±–µ–∑ '
            '—Ç–µ–æ—Ä–∏–∏ –æ–±–æ–π—Ç–∏—Å—å –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è. –û–¥–Ω–∞–∫–æ, —á–∞—â–µ –≤—Å–µ–≥–æ –æ–±—É—á–µ–Ω–∏–µ '
            '–≤–∑—Ä–æ—Å–ª—ã—Ö –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–æ–≤, –ø–æ—ç—Ç–æ–º—É '
            '–ª—É—á—à–µ –¥–µ–ª–∞—Ç—å —É–ø–æ—Ä –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫—É.'
        ])

    await update.callback_query.message.reply_text(text=text)

    await asleep(3)

    text = '\n'.join([
        '–í–∑—Ä–æ—Å–ª–æ–º—É –≤–∞–∂–Ω–æ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å '
        '–≤ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–≤–æ–µ–≥–æ –æ–±—É—á–µ–Ω–∏—è, —Å–≤–µ—Ä—è—Ç—å—Å—è '
        '—Å —Ü–µ–ª—è–º–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–ü—Ä–∞–≤–¥–∞', callback_data=ANSWER_1),
        InlineKeyboardButton(text='–õ–æ–∂—å', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_QUIZ_16


async def block1_quiz_16(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    if query.data == ANSWER_1:
        text = '\n'.join([
            '–î–∞, —ç—Ç–æ –ø—Ä–∞–≤–¥–∞. –ó–¥–æ—Ä–æ–≤–æ, –∫–æ–≥–¥–∞ —É '
            '–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø–æ–º–æ—á—å –≤ —ç—Ç–æ–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º.'
        ])
    else:
        text = '\n'.join([
            '–≠—Ç–æ –ø—Ä–∞–≤–¥–∞. –ó–¥–æ—Ä–æ–≤–æ, –∫–æ–≥–¥–∞ —É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è '
            '–ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø–æ–º–æ—á—å –≤ —ç—Ç–æ–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º.'
        ])

    await update.callback_query.message.reply_text(text=text)

    await asleep(3)

    text = '\n'.join([
        '–û—Ç–ª–∏—á–Ω–æ! –ú–æ–∂–µ–º –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ.',
        '',
        '–î–æ–ø—É—Å—Ç–∏–º, –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —É—á—ë–ª –≤—Å–µ —ç—Ç–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã'
        ' –∏ —É–∂–µ –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç—å. –ù–æ —Ç—É—Ç —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è'
        ' –µ—â—ë –æ–¥–∏–Ω –Ω—é–∞–Ω—Å, –æ –∫–æ—Ç–æ—Ä–æ–º –º—ã —É–ø–æ–º—è–Ω—É–ª–∏ –≤—ã—à–µ, ‚Äî –º–æ—Ç–∏–≤–∞—Ü–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–í —á—ë–º –Ω—é–∞–Ω—Å?', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_STUDENT_1


async def block1_student_1(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = """–ú–æ—Ç–∏–≤–∞—Ü–∏—è –±—ã–≤–∞–µ—Ç –≤–Ω–µ—à–Ω–µ–π –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π.

<b>–í–Ω–µ—à–Ω—è—è –º–æ—Ç–∏–≤–∞—Ü–∏—è</b> –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –∏–∑-–∑–∞ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —á–µ–ª–æ–≤–µ–∫. –ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞–¥–æ —Ö–æ–¥–∏—Ç—å –≤ —à–∫–æ–ª—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Å–¥–∞—á–∏ –ï–ì–≠ –∏–ª–∏ –ø–æ–π—Ç–∏ –≤ –≤—É–∑ –Ω–∞ –ª—é–±—É—é —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å, —á—Ç–æ–±—ã –ø—Ä–æ—Å—Ç–æ –ø–æ–ª—É—á–∏—Ç—å –¥–∏–ø–ª–æ–º.

<b>–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –º–æ—Ç–∏–≤–∞—Ü–∏—è</b> –∏—Å—Ö–æ–¥–∏—Ç –æ—Ç —Å–∞–º–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –∏ –æ—Å–Ω–æ–≤—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –µ–≥–æ —Ü–µ–Ω–Ω–æ—Å—Ç—è—Ö –∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–π—Ç–∏ –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å –ø–æ –¥–∏–∑–∞–π–Ω—É —Å–∞–π—Ç–æ–≤, —á—Ç–æ–±—ã —Å–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é, –∏–ª–∏ —É—á–∏—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —á—Ç–æ–±—ã –±–æ–ª—å—à–µ –∏ —á–∞—â–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å. –≠—Ç–∞ –º–æ—Ç–∏–≤–∞—Ü–∏—è –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–∏–ª—å–Ω–µ–µ –∏ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–æ–ª–µ–µ –¥–æ–ª–≥–æ–≤—Ä–µ–º–µ–Ω–Ω–æ."""

    await update.callback_query.message.reply_text(text=text, parse_mode=ParseMode.HTML)

    await asleep(10)

    text = '\n'.join([
        '–í–Ω–µ—à–Ω—è—è –º–æ—Ç–∏–≤–∞—Ü–∏—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ –≤–Ω–µ—à–Ω–∏—Ö —Å—Ç–∏–º—É–ª–∞—Ö: '
        '–æ—Ü–µ–Ω–∫–∏, –¥–µ–¥–ª–∞–π–Ω—ã, —Ä–µ–π—Ç–∏–Ω–≥–∏ –∏ —Ç. –¥. –ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, '
        '—Ç–∞–∫–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ—Ö–æ–¥–∏—Ç –±—ã—Å—Ç—Ä–æ, –∏ –¥–æ–ª–≥–æ –Ω–∞ –Ω–µ–π –¥–µ—Ä–∂–∞—Ç—å—Å—è –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è.',
        '',
        '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –º–æ—Ç–∏–≤–∞—Ü–∏—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ –ª–∏—á–Ω–æ–π —Ü–µ–ª–∏ –æ–±—É—á–µ–Ω–∏—è, '
        '–ø–æ–ª—É—á–µ–Ω–∏–∏ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è –æ—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞. –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π '
        '–º–æ—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Ç–æ–º—É, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ —Å–∞–º –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å'
        ' –æ–±—É—á–µ–Ω–∏—è, —Å–ª–µ–¥–∏—Ç –∑–∞ –¥–µ–¥–ª–∞–π–Ω–∞–º–∏, –±–æ–ª—å—à–µ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ–ø—ã—Ç –∏'
        ' –æ–±—Ä–∞—â–∞–µ—Ç –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å. –ü–æ—ç—Ç–æ–º—É –ª—É—á—à–µ –ø–æ–º–æ–≥–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—É'
        ' –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –º–æ—Ç–∏–≤–∞—Ü–∏–∏.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–ö–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å?', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_STUDENT_2


async def block1_student_2(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    await context.bot.copy_message(chat_id=update.effective_chat.id, from_chat_id=MEDIA_CHANNEL_ID,
                                   message_id=MEDIA_PHOTO_4)
    text = '\n'.join([
        '–í –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è —Å–∞–º–æ–æ—â—É—â–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ '
        '–º–µ–Ω—è–µ—Ç—Å—è: –æ–Ω –Ω–∞–±–∏—Ä–∞–µ—Ç –±–æ–ª—å—à–µ –∑–Ω–∞–Ω–∏–π –ø–æ —Ç–µ–º–µ, '
        '—É–≤–µ—Ä–µ–Ω–Ω–µ–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –≤ –∫—É—Ä—Å–µ. –ú–µ–Ω—è–µ—Ç—Å—è –∏ '
        '–µ–≥–æ –º–æ—Ç–∏–≤–∞—Ü–∏—è –∫ –æ–±—É—á–µ–Ω–∏—é, –¥–∞–∂–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è :)',
        '',
        '–°–æ–≥–ª–∞—Å–Ω–æ –º–æ–¥–µ–ª–∏ SSDL (the Staged Self Directed Learning), '
        '–º–æ—Ç–∏–≤–∞—Ü–∏—è —É—á–∞—â–µ–≥–æ—Å—è –ø—Ä–æ—Ö–æ–¥–∏—Ç 4 —Å—Ç–∞–¥–∏–∏:',
        '',
        '1. –ó–∞–≤–∏—Å–∏–º—ã–π. ',
        '2. –ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–π. ',
        '3. –í–æ–≤–ª–µ—á—ë–Ω–Ω—ã–π. ',
        '4. –°–∞–º–æ—É–ø—Ä–∞–≤–ª—è–µ–º—ã–π.',
        '',
        '–ù–∞ –∫–∞–∂–¥–æ–π –∏–∑ —Å—Ç–∞–¥–∏–π —É —Å—Ç—É–¥–µ–Ω—Ç–∞ –ø–æ—è–≤–ª—è—é—Ç—Å—è'
        ' –Ω–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∫ –æ–±—É—á–µ–Ω–∏—é –∏, —á—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ '
        '–≤–∞–∂–Ω–æ, –∫ –ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è. –•–æ—Ä–æ—à–µ–º—É'
        ' –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é –≤–∞–∂–Ω–æ –±—ã—Ç—å –≥–∏–±–∫–∏–º –∏ –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞—Ç—å '
        '—Å–≤–æ–π —Å—Ç–∏–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è –ø–æ–¥ –∑–∞–ø—Ä–æ—Å —Å—Ç—É–¥–µ–Ω—Ç–∞.',
        '',
        '–î–∞–≤–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –∫–∞–∂–¥—É—é –∏–∑ —ç—Ç–∏—Ö —Å—Ç–∞–¥–∏–π.'
    ])

    await context.bot.send_message(chat_id=update.effective_chat.id, text=text, parse_mode=ParseMode.HTML)

    await asleep(15)

    text = '\n'.join([
        '<b>–°—Ç–∞–¥–∏—è ¬´–ó–∞–≤–∏—Å–∏–º—ã–π¬ª</b>',
        '',
        '–ù–∞—á–∞–ª–æ –æ–±—É—á–µ–Ω–∏—è, –ø—Ä–∏–º–µ—Ä–Ω–æ 1‚ÅÑ3 –∫—É—Ä—Å–∞.',
        '',
        '<b>–°—Ç—É–¥–µ–Ω—Ç:</b>',
        '‚Äì –ø–æ–ª–æ–Ω —Å–∏–ª –∏ –∂–µ–ª–∞–Ω–∏—è —É—á–∏—Ç—å—Å—è, –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–∏—Å–∏–º –æ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è;',
        '‚Äì —Ö–æ—á–µ—Ç –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Ñ–∏ –∏ '
        '–æ—Ç–ª–∏—á–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ç–µ–º–µ, –µ–º—É –º–æ–∂–Ω–æ –¥–æ–≤–µ—Ä—è—Ç—å;',
        '‚Äì –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ —á—ë—Ç–∫–æ–º –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂–µ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ–π '
        '–æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ.',
        '',
        '<b>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:</b>',
        '‚Äì —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –¥–æ–≤–µ—Ä–∏–µ –∫ —Å–µ–±–µ, –∫–∞–∫ —ç–∫—Å–ø–µ—Ä—Ç—É;',
        '‚Äì –¥–∞—ë—Ç —á—ë—Ç–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç –∫–∞–∂–¥—ã–π —à–∞–≥ —Å—Ç—É–¥–µ–Ω—Ç–∞;',
        '‚Äì –æ–±—ä—è—Å–Ω—è–µ—Ç —Ü–µ–Ω–Ω–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è –∏ –ø–æ–º–æ–≥–∞–µ—Ç '
        '—Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —É—á–µ–±–Ω—ã–µ —Ü–µ–ª–∏.',
        '',
        '–ö–∞–∫–∞—è —Å—Ç–∞–¥–∏—è —Å–ª–µ–¥—É—é—â–∞—è?'
    ])

    buttons = [
        [InlineKeyboardButton(text='–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–π', callback_data=DUMMY)],
        [InlineKeyboardButton(text='–í–æ–≤–ª–µ—á–µ–Ω–Ω—ã–π', callback_data=DUMMY)],
        [InlineKeyboardButton(text='–°–∞–º–æ—É–ø—Ä–∞–≤–ª—è–µ–º—ã–π', callback_data=DUMMY)],
    ]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

    return BLOCK1_STUDENT_3


async def block1_student_3(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '<b>–°—Ç–∞–¥–∏—è ¬´–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–π¬ª</b>',
        '',
        '–ë–ª–∏–∂–µ –∫ —Å–µ—Ä–µ–¥–∏–Ω–µ –æ–±—É—á–µ–Ω–∏—è, –∫–æ–Ω–µ—Ü 1‚ÅÑ3 –∫—É—Ä—Å–∞.',
        '',
        '<b>–°—Ç—É–¥–µ–Ω—Ç:</b>',
        '‚Äì –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ ‚Äî –Ω–∞—à –º–æ–∑–≥ –Ω–µ –æ—á–µ–Ω—å –ª—é–±–∏—Ç —É—á–∏—Ç—å—Å—è –Ω–æ–≤–æ–º—É;',
        '‚Äì —Å–ø–∞–¥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.',
        '',
        '<b>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:</b>',
        '‚Äì –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –æ —Ü–µ–ª—è—Ö –æ–±—É—á–µ–Ω–∏—è,'
        ' –ø–æ–º–æ–≥–∞–µ—Ç —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –º–æ—Ç–∏–≤–∞—Ü–∏—é '
        '‚Äî –ø–æ–Ω—è—Ç—å, –∑–∞—á–µ–º —Å—Ç—É–¥–µ–Ω—Ç —É—á–∏—Ç—Å—è, —Ä–∞–¥–∏ —á–µ–≥–æ;',
        ' ‚Äì –ø–æ–æ—â—Ä—è–µ—Ç –º–∞–ª–µ–Ω—å–∫–∏–µ –ø–æ–±–µ–¥—ã, –±–æ–ª—å—à–µ –∞–∫—Ü–µ–Ω—Ç–∞ '
        '–¥–µ–ª–∞–µ—Ç –Ω–∞ —É—Å–ø–µ—Ö–∞—Ö, –∞ –Ω–µ –æ—à–∏–±–∫–∞—Ö.',
        '',
        '–í—Ç–æ—Ä–∞—è —Å—Ç–∞–¥–∏—è —Å–∞–º–∞—è —Å–ª–æ–∂–Ω–∞—è –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞, '
        '–ø–æ—ç—Ç–æ–º—É –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è ‚Äî '
        '–ø–æ–º–æ—á—å –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ–µ '
        '—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å—Ç–∞–¥–∏–∏...'
    ])

    buttons = [
        [InlineKeyboardButton(text='–í–æ–≤–ª–µ—á–µ–Ω–Ω—ã–π', callback_data=DUMMY)],
        [InlineKeyboardButton(text='–°–∞–º–æ—É–ø—Ä–∞–≤–ª—è–µ–º—ã–π', callback_data=DUMMY)],
    ]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

    return BLOCK1_STUDENT_4


async def block1_student_4(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '<b>¬´–í–æ–≤–ª–µ—á—ë–Ω–Ω–æ—Å—Ç–∏¬ª</b>',
        '',
        '–°–µ—Ä–µ–¥–∏–Ω–∞ –æ–±—É—á–µ–Ω–∏—è, –Ω–æ —Å—Ç–∞–¥–∏—è –º–æ–∂–µ—Ç –Ω–µ '
        '–Ω–∞—Å—Ç—É–ø–∏—Ç—å, –µ—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –∑–∞—Å—Ç—Ä—è–ª –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π.',
        '',
        '<b>–°—Ç—É–¥–µ–Ω—Ç:</b>',
        '- –º–æ—Ç–∏–≤–∞—Ü–∏—è —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –∏ —É—Å–∏–ª–∏–≤–∞–µ—Ç—Å—è;',
        '‚Äì —á—É–≤—Å—Ç–≤—É–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç;',
        '‚Äì —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π –∏ –º–µ–Ω–µ–µ –∑–∞–≤–∏—Å–∏–º—ã–π –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞;',
        '‚Äì –≥–æ—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω—è—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ.',
        '',
        '<b>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:</b>',
        '‚Äì –ø–æ–æ—â—Ä—è–µ—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å;',
        '‚Äì –¥–∞—ë—Ç —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã;',
        '‚Äì –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –≥—Ä—É–ø–ø–æ–≤—É—é —Ä–∞–±–æ—Ç—É.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–ö–æ–≥–¥–∞ —Å—Ç—É–¥–µ–Ω—Ç —Å–∞–º–æ—É–ø—Ä–∞–≤–ª—è–µ–º—ã–π?', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

    return BLOCK1_STUDENT_5


async def block1_student_5(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '<b>–°—Ç–∞–¥–∏—è ¬´–°–∞–º–æ—É–ø—Ä–∞–≤–ª—è–µ–º—ã–π¬ª</b>',
        '',
        '–ö–æ–Ω–µ—Ü –æ–±—É—á–µ–Ω–∏—è, –Ω–æ —Å—Ç–∞–¥–∏—è –º–æ–∂–µ—Ç '
        '–Ω–µ –Ω–∞—Å—Ç—É–ø–∏—Ç—å, –µ—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –∑–∞—Å—Ç—Ä—è–ª '
        '–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö.',
        '',
        '<b>–°—Ç—É–¥–µ–Ω—Ç:</b>',
        '‚Äì –≤—ã—Å–æ–∫–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è;',
        '‚Äì –ø–æ–ª–Ω–∞—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å;',
        '‚Äì –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Å–ª–æ–∂–Ω—ã–º –∑–∞–¥–∞—á–∞–º –≤–Ω–µ —Ä–∞–º–æ–∫ –æ–±—É—á–µ–Ω–∏—è.',
        '',
        '<b>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:</b>',
        '- –º–µ–Ω—å—à–µ –≤–∫–ª—é—á—ë–Ω –≤ —Ä–∞–±–æ—Ç—É —Å—Ç—É–¥–µ–Ω—Ç–∞, –±–æ–ª—å—à–µ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∏ —Å–æ–≤–µ—Ç—É–µ—Ç;',
        '‚Äì –ø–æ–º–æ–≥–∞–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏—é —Ä–∞–∑–≤–∏—Ç–∏—è –ø–æ—Å–ª–µ –æ–±—É—á–µ–Ω–∏—è;',
        '‚Äì –ø—Ä–æ–≤–æ–¥–∏—Ç —Å–æ–≤–º–µ—Å—Ç–Ω—É—é —Ä–µ—Ñ–ª–µ–∫—Å–∏—é.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ —Å—Ç–∞–¥–∏–∏?', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

    return BLOCK1_STUDENT_6


async def block1_student_6(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '–ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å –∫—É—Ä—Å –Ω–∞ —Å—Ç–∞–¥–∏–∏ –∏ '
        '—Å–ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é. '
        '–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –Ω–∞ –∫–∞–∫–æ–º —ç—Ç–∞–ø–µ '
        '–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–∞–Ω—è—Ç–∏–µ, –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç—å, '
        '–∫–∞–∫–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –±—É–¥–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π: –¥–∞—Ç—å'
        ' –±–æ–ª—å—à–µ –∏–ª–∏ –º–µ–Ω—å—à–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –ø–æ–¥–æ–±—Ä–∞—Ç—å —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞–Ω–∏–π.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–ï—Å–ª–∏ –º–æ–∏ –∑–∞–Ω—è—Ç–∏—è –≤ –Ω–∞—á–∞–ª–µ –∫—É—Ä—Å–∞?', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_STUDENT_7


async def block1_student_7(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '–ö–∞–∫ —Å—á–∏—Ç–∞–µ—Ç–µ, –≤ –Ω–∞—á–∞–ª–µ –æ–±—É—á–µ–Ω–∏—è –≤–∞–∂–Ω–æ:',
        '1 ‚Äì –¥–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—É –±–æ–ª—å—à–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏: '
        '–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ç–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –∞–ª–≥–æ—Ä–∏—Ç–º—ã,'
        ' –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–¥–∞–Ω–∏—è, –ø—Ä–∏–º–µ—Ä—ã –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ',
        '2 ‚Äì –¥–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—è–≤–∏—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å: '
        '–¥–∞–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è, –ø—Ä–∏–∑—ã–≤–∞—Ç—å –∫ '
        '—Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–º—É –ø–æ–∏—Å–∫—É –æ—Ç–≤–µ—Ç–æ–≤'
    ])

    buttons = [[
        InlineKeyboardButton(text='1', callback_data=ANSWER_1),
        InlineKeyboardButton(text='2', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_STUDENT_8


async def block1_student_8(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    if query.data == ANSWER_1:
        text = '\n'.join([
            '–í–µ—Ä–Ω–æ! –í –Ω–∞—á–∞–ª–µ –æ–±—É—á–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ '
            '–∂–¥–µ—Ç –º–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ. –ö–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ, –Ω–∞—à'
            ' –º–æ–∑–≥ –ª—é–±–∏—Ç —Å–æ–ø—Ä–æ—Ç–∏–≤–ª—è—Ç—å—Å—è –Ω–æ–≤–∏–∑–Ω–µ. '
            '–ü–æ—ç—Ç–æ–º—É –≤–∞–∂–Ω–æ –¥–∞—Ç—å –±–æ–ª—å—à–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, '
            '—á—Ç–æ–±—ã –ø–æ–º–æ—á—å –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å —ç—Ç–æ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ.'
        ])
    else:
        text = '\n'.join([
            '–ù–µ —Å–æ–≤—Å–µ–º. –í –Ω–∞—á–∞–ª–µ –æ–±—É—á–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∂–¥–µ—Ç –º–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ. –ö–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ, –Ω–∞—à –º–æ–∑–≥ –ª—é–±–∏—Ç —Å–æ–ø—Ä–æ—Ç–∏–≤–ª—è—Ç—å—Å—è '
            '–Ω–æ–≤–∏–∑–Ω–µ. –ü–æ—ç—Ç–æ–º—É –≤–∞–∂–Ω–æ –¥–∞—Ç—å –±–æ–ª—å—à–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å —ç—Ç–æ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ.'
        ])

    buttons = [[
        InlineKeyboardButton(text='–ï—Å–ª–∏ –º–æ–∏ –∑–∞–Ω—è—Ç–∏—è –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ –∫—É—Ä—Å–∞?',
                             callback_data=ANSWER_1),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_STUDENT_9


async def block1_student_9(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '–£–¥–µ–ª–∏—Ç–µ –æ—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ —É—Å–ø–µ—Ö–∞–º —É—á–∞—â–∏—Ö—Å—è. '
        '–ï—Å–ª–∏ –æ–±—É—á–µ–Ω–∏–µ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ, –≤—ã –º–æ–∂–µ—Ç–µ '
        '–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∂–∏–≤—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å: '
        '—á–µ–≥–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞–º, –∫–∞–∫ –æ–Ω–∏ —á—É–≤—Å—Ç–≤—É–µ—Ç '
        '—Å–µ–±—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è.',
        '',
        '<b>–ö–∞–∫ –¥—É–º–∞–µ—Ç–µ, —á—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤ —Ç–∞–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏?</b>'
        ' –í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ, —á—Ç–æ –∫–∞–∂–µ—Ç—Å—è –≤–∞–º –ø–æ–¥—Ö–æ–¥—è—â–∏–º ',
        '1 ‚Äì –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Ü–µ–ª—è–º –æ–±—É—á–µ–Ω–∏—è, –ø–æ–º–æ—á—å —Å—Ç—É–¥–µ–Ω—Ç–∞–º —Å–≤–µ—Ä–∏—Ç—å—Å—è —Å –Ω–∏–º–∏ –∏ –æ—Ü–µ–Ω–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å ',
        '2 ‚Äì —É—Å–ª–æ–∂–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è, –¥–∏—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è –æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –æ–Ω–∏ —Å—Ç–∞–ª–∏ –±–æ–ª–µ–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã ',
        '3 ‚Äì —É–¥–µ–ª–∏—Ç—å –±–æ–ª—å—à–µ '
        '–≤–Ω–∏–º–∞–Ω–∏—è —É—Å–ø–µ—Ö–∞–º, —á–∞—â–µ —Ö–≤–∞–ª–∏—Ç—å –∏ —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö ',
        '4 ‚Äì –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞–º –≥—Ä—É–ø–ø–æ–≤—ã–µ '
        '–ø—Ä–æ–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±—É–¥—É—Ç –∫—É—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —ç–∫—Å–ø–µ—Ä—Ç–æ–º, –Ω–∞–±–ª—é–¥–∞—Ç—å, –∫–∞–∫ –æ–Ω–∏ —Å–ø—Ä–∞–≤—è—Ç—Å—è ',
        '5 ‚Äì —Å–ø—Ä–æ—Å–∏—Ç—å —É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, '
        '–∫–∞–∫–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å–µ–π—á–∞—Å –µ—Å—Ç—å, –∫–∞–∫ –∏–º –º–æ–∂–Ω–æ –ø–æ–º–æ—á—å'
    ])

    buttons = [[
        InlineKeyboardButton(text='1, 2, 4', callback_data=ANSWER_2),
        InlineKeyboardButton(text='3, 4, 5', callback_data=ANSWER_2),
    ], [
        InlineKeyboardButton(text='1, 3, 5', callback_data=ANSWER_1),
        InlineKeyboardButton(text='2, 4, 5', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

    return BLOCK1_STUDENT_10


async def block1_student_10(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    if query.data == ANSWER_1:
        text = '\n'.join([
            '–í–µ—Ä–Ω–æ! –°—Ç–æ–∏—Ç –Ω–∞–ø–æ–º–Ω–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞–º –æ —Ü–µ–ª—è—Ö –∏ –æ—Ç–º–µ—Ç–∏—Ç—å –∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –Ω–æ –¥–∏—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–µ —Å—Ç–æ–∏—Ç. –ï—Å–ª–∏ –≤—ã '
            '—Ö–æ—Ç–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –≥—Ä—É–ø–ø–æ–≤—É—é —Ä–∞–±–æ—Ç—É –∏–ª–∏ —É—Å–ª–æ–∂–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —Ç–æ—á–Ω–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è!',
            ' ',
            '–ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—ä—è—Å–Ω–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞–º, –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Å—Ç–æ–∏—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —ç—Ç–æ–π –∑–∞–¥–∞—á–µ–π –≤ –∫–æ–º–∞–Ω–¥–µ, '
            '—á—Ç–æ —Å—Ç–æ–∏—Ç —É—á–µ—Å—Ç—å.',
            ' ',
            '–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—ä—è—Å–Ω–∏—Ç—å, –∫–∞–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –∏ –∑–Ω–∞–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç—ã –ø–æ–ª—É—á–∞—Ç, –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω—è—Ç —ç—Ç–æ '
            '—Å–ª–æ–∂–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ, –∫–∞–∫ –æ–Ω–æ –ø–æ–º–æ–∂–µ—Ç –∏–º –≤ —Ä–µ—à–µ–Ω–∏–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á.',
            '',
            '–ï—Å–ª–∏ –≤—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ–± '
            '–æ–±—É—á–µ–Ω–∏–∏ —É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–µ: –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å –∏ —Å–æ–æ–±—â–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞–º, '
            '—á—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å —É—á–µ—Å—Ç—å –∏ –∫–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º.'
        ])
    else:
        text = '\n'.join([
            '–ù–µ —Å–æ–≤—Å–µ–º. –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ, —Å—Ç–æ–∏—Ç –Ω–∞–ø–æ–º–Ω–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞–º –æ —Ü–µ–ª—è—Ö –∏ –æ—Ç–º–µ—Ç–∏—Ç—å –∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, '
            '–Ω–æ –¥–∏—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–µ —Å—Ç–æ–∏—Ç. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –≥—Ä—É–ø–ø–æ–≤—É—é —Ä–∞–±–æ—Ç—É –∏–ª–∏ —É—Å–ª–æ–∂–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è, '
            '–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —Ç–æ—á–Ω–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è! –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—ä—è—Å–Ω–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞–º, –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Å—Ç–æ–∏—Ç '
            '—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —ç—Ç–æ–π –∑–∞–¥–∞—á–µ–π –≤ –∫–æ–º–∞–Ω–¥–µ, —á—Ç–æ —Å—Ç–æ–∏—Ç —É—á–µ—Å—Ç—å. –¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—ä—è—Å–Ω–∏—Ç—å, –∫–∞–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –∏ –∑–Ω–∞–Ω–∏—è '
            '—Å—Ç—É–¥–µ–Ω—Ç—ã –ø–æ–ª—É—á–∞—Ç, –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω—è—Ç —ç—Ç–æ —Å–ª–æ–∂–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ, –∫–∞–∫ –æ–Ω–æ –ø–æ–º–æ–∂–µ—Ç –∏–º –≤ —Ä–µ—à–µ–Ω–∏–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á. –ï—Å–ª–∏ '
            '–≤—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ–± –æ–±—É—á–µ–Ω–∏–∏ —É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–µ: –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å –∏ '
            '—Å–æ–æ–±—â–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞–º, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å —É—á–µ—Å—Ç—å –∏ –∫–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º.'
        ])

    buttons = [[
        InlineKeyboardButton(text='–ï—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã?',
                             callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_STUDENT_11


async def block1_student_11(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = """–í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ —Å—Ç–æ–∏—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞–º –±–æ–ª—å—à–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –±–æ–ª—å—à–µ –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –∏ —Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å.   

<b>–ü–æ–¥–≤–µ–¥–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏—Ç–æ–≥ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è, –∫—Ç–æ —Ç–∞–∫–æ–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –≤ –æ–Ω–ª–∞–π–Ω–µ?</b> –ö–∞–∫–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –º—ã –º–æ–≥–ª–∏ –±—ã –Ω–∞–∑–≤–∞—Ç—å –∫–ª–∞—Å—Å–Ω—ã–º? –í—ã–±–∏—Ä–∞–π—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–∞–º–∏ —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ—É—á–∏—Ç—å—Å—è."""

    await update.callback_query.message.reply_text(text=text, parse_mode=ParseMode.HTML)

    await asleep(5)

    await context.bot.copy_message(chat_id=update.effective_chat.id, from_chat_id=MEDIA_CHANNEL_ID,
                                   message_id=MEDIA_TEACHERS_1)

    text = '\n'.join([
        '1 ‚Äî —Ñ–∞–Ω–∞—Ç —Ç–µ–æ—Ä–∏–∏ –∏ —ç—Å—Å–µ –Ω–∞ —Ç–µ–º—É ¬´–ï—Å–ª–∏ –±—ã, —Ç–æ...¬ª ',
        '2 ‚Äî –ø—Ä–æ—Ñ–∏, –Ω–µ –ø—Ä–æ—â–∞—é—â–∏–π –æ—à–∏–±–æ–∫',
        '3 ‚Äî –ø—Ä–∞–∫—Ç–∏–∫, –ø—Ä–∏–∑—ã–≤–∞—é—â–∏–π —Å–≤–æ–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤ –ø—Ä–æ–±–æ–≤–∞—Ç—å –∏ –æ—Ç—Ç–∞—á–∏–≤–∞—Ç—å –Ω–∞–≤—ã–∫–∏'
    ])

    buttons = [[
        InlineKeyboardButton(text='1', callback_data=ANSWER_1),
        InlineKeyboardButton(text='2', callback_data=ANSWER_2),
        InlineKeyboardButton(text='3', callback_data=ANSWER_3),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

    return BLOCK1_STUDENT_12


async def block1_student_12(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    answer_sentence_map = {
        ANSWER_1: '—Ñ–∞–Ω–∞—Ç —Ç–µ–æ—Ä–∏–∏ –∏ —ç—Å—Å–µ –Ω–∞ —Ç–µ–º—É ¬´–ï—Å–ª–∏ –±—ã, —Ç–æ...¬ª',
        ANSWER_2: '–ø—Ä–æ—Ñ–∏, –Ω–µ –ø—Ä–æ—â–∞—é—â–∏–π –æ—à–∏–±–æ–∫',
        ANSWER_3: '–ø—Ä–∞–∫—Ç–∏–∫, –ø—Ä–∏–∑—ã–≤–∞—é—â–∏–π —Å–≤–æ–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤ –ø—Ä–æ–±–æ–≤–∞—Ç—å –∏ –æ—Ç—Ç–∞—á–∏–≤–∞—Ç—å –Ω–∞–≤—ã–∫–∏',
    }
    context.user_data[USER_DATA_BLOCK1_TEACHER_SENTENCES] = [answer_sentence_map[query.data]]

    await context.bot.copy_message(chat_id=update.effective_chat.id, from_chat_id=MEDIA_CHANNEL_ID,
                                   message_id=MEDIA_TEACHERS_2)

    text = '\n'.join([
        '1 ‚Äî –ø–æ–Ω–∏–º–∞–µ—Ç —Ü–µ–Ω–Ω–æ—Å—Ç—å –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏—è –∏ –ø–æ–º–æ–≥–∞–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞–º —É—á–∏—Ç—å—Å—è –≤ –æ–Ω–ª–∞–π–Ω–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ',
        '2 ‚Äî ¬´–ß—Ç–æ —Ç–∞–∫–æ–µ –æ–Ω–ª–∞–π–Ω?¬ª',
        '3 ‚Äî –∑–∞–±–∏–≤–∞–µ—Ç –Ω–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–µ —Ç–æ–ª—å–∫–æ –≤ –æ–Ω–ª–∞–π–Ω–µ :)',
    ])
    buttons = [[
        InlineKeyboardButton(text='1', callback_data=ANSWER_1),
        InlineKeyboardButton(text='2', callback_data=ANSWER_2),
        InlineKeyboardButton(text='3', callback_data=ANSWER_3),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_STUDENT_13


async def block1_student_13(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    answer_sentence_map = {
        ANSWER_1: '–ø–æ–Ω–∏–º–∞–µ—Ç —Ü–µ–Ω–Ω–æ—Å—Ç—å –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏—è–∏ –ø–æ–º–æ–≥–∞–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞–º  —É—á–∏—Ç—å—Å—è –≤ –æ–Ω–ª–∞–π–Ω–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ',
        ANSWER_2: '¬´–ß—Ç–æ —Ç–∞–∫–æ–µ –æ–Ω–ª–∞–π–Ω?¬ª',
        ANSWER_3: '–∑–∞–±–∏–≤–∞–µ—Ç –Ω–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–µ —Ç–æ–ª—å–∫–æ –≤ –æ–Ω–ª–∞–π–Ω–µ :)',
    }
    context.user_data[USER_DATA_BLOCK1_TEACHER_SENTENCES].append(answer_sentence_map[query.data])

    await context.bot.copy_message(chat_id=update.effective_chat.id, from_chat_id=MEDIA_CHANNEL_ID,
                                   message_id=MEDIA_TEACHERS_3)

    text = """1 ‚Äî –æ—Ç–ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –∑–∞–±–æ—Ç–∏—Ç—Å—è –æ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π —Å—Ä–µ–¥–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è
2 ‚Äî —Å —ç–º–ø–∞—Ç–∏–µ–π –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Å—Ç—É–¥–µ–Ω—Ç–∞–º, –¥—É–º–∞–µ—Ç –æ–± –∏—Ö –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –≤–æ–≤–ª–µ—á—ë–Ω–Ω–æ—Å—Ç–∏, –ø–æ–º–æ–≥–∞–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Ç–∞–ª–∞–Ω—Ç—ã
3 ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∂—ë—Å—Ç–∫–∏–µ –º–µ—Ç–æ–¥—ã –º–æ—Ç–∏–≤–∞—Ü–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: —É–ª—å—Ç–∏–º–∞—Ç—É–º—ã –∏ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–∏"""

    buttons = [[
        InlineKeyboardButton(text='1', callback_data=ANSWER_1),
        InlineKeyboardButton(text='2', callback_data=ANSWER_2),
        InlineKeyboardButton(text='3', callback_data=ANSWER_3),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_STUDENT_14


async def block1_student_14(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    answer_sentence_map = {
        ANSWER_1: '–æ—Ç–ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –∑–∞–±–æ—Ç–∏—Ç—Å—è –æ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π —Å—Ä–µ–¥–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è',
        ANSWER_2: '—Å —ç–º–ø–∞—Ç–∏–µ–π –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Å—Ç—É–¥–µ–Ω—Ç–∞–º, –¥—É–º–∞–µ—Ç –æ–± –∏—Ö –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –≤–æ–≤–ª–µ—á–µ–Ω–∏–∏, '
                  '–ø–æ–º–æ–≥–∞–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Ç–∞–ª–∞–Ω—Ç—ã',
        ANSWER_3: '–∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∂—ë—Å—Ç–∫–∏–µ –º–µ—Ç–æ–¥—ã –º–æ—Ç–∏–≤–∞—Ü–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: —É–ª—å—Ç–∏–º–∞—Ç—É–º—ã –∏ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–∏',
    }
    context.user_data[USER_DATA_BLOCK1_TEACHER_SENTENCES].append(answer_sentence_map[query.data])

    await context.bot.copy_message(chat_id=update.effective_chat.id, from_chat_id=MEDIA_CHANNEL_ID,
                                   message_id=MEDIA_TEACHERS_4)


    text = '\n'.join([
        '1 ‚Äî –≥–∏–ø–µ—Ä–æ–ø–µ–∫–∞—é—â–∏–π, –Ω–µ –¥–∞—é—â–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞–º —à–∞–Ω—Å–∞ –ø—Ä–æ—è–≤–∏—Ç—å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É, –æ—à–∏–±–∏—Ç—å—Å—è –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ —Å–∞–º–∏–º ',
        '2 ‚Äî —Ç–∏—Ä–∞–Ω, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã–∂–∏–≤–∞–µ—Ç —Å–∏–ª—å–Ω–µ–π—à–∏–π',
        '3 ‚Äî –ø—Ä–∏–∑–Ω–∞—é—â–∏–π —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —É—á–µ–Ω–∏–∫–æ–≤, –¥–∞—é—â–∏–π –ø—Ä–∏ —ç—Ç–æ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–Ω–∞–Ω–∏—è',
    ])

    buttons = [[
        InlineKeyboardButton(text='1', callback_data=ANSWER_1),
        InlineKeyboardButton(text='2', callback_data=ANSWER_2),
        InlineKeyboardButton(text='3', callback_data=ANSWER_3),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_STUDENT_15


async def block1_student_15(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    answer_sentence_map = {
        ANSWER_1: '–≥–∏–ø–µ—Ä–æ–ø–µ–∫–∞—é—â–∏–π, –Ω–µ –¥–∞—é—â–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞–º —à–∞–Ω—Å–∞ –ø—Ä–æ—è–≤–∏—Ç—å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É, –æ—à–∏–±–∏—Ç—å—Å—è –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ —Å–∞–º–∏–º',
        ANSWER_2: '—Ç–∏—Ä–∞–Ω, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã–∂–∏–≤–∞–µ—Ç —Å–∏–ª—å–Ω–µ–π—à–∏–π',
        ANSWER_3: '–ø—Ä–∏–∑–Ω–∞—é—â–∏–π —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —É—á–µ–Ω–∏–∫–æ–≤, –¥–∞—é—â–∏–π –ø—Ä–∏ —ç—Ç–æ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–Ω–∞–Ω–∏—è',
    }
    context.user_data[USER_DATA_BLOCK1_TEACHER_SENTENCES].append(answer_sentence_map[query.data])

    await context.bot.copy_message(chat_id=update.effective_chat.id, from_chat_id=MEDIA_CHANNEL_ID,
                                   message_id=MEDIA_TEACHERS_5)

    text = '\n'.join([
        '1 ‚Äî —É–º–µ–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –∑–Ω–∞–µ—Ç, –∫–∞–∫ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ –∏ –≤–æ–≤–ª–µ—á—å –≤ –Ω–µ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤  ',
        '2 ‚Äî –æ–±–ª–∞–¥–∞–µ—Ç –∫—É—á–µ–π —Ä–µ–≥–∞–ª–∏–π, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–Ω—ã–µ –∏ —Å–ø–æ—Ä–Ω—ã–µ –≤–µ—â–∏, –Ω–æ —Å –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–º –∞—Ä—Ç–∏—Å—Ç–∏–∑–º–æ–º  ',
        '3 ‚Äî —Å–∞–º –Ω–∞—Å—Ç–æ–ª—å–∫–æ —É–≤–ª–µ—á—ë–Ω —Å–≤–æ–∏–º –¥–µ–ª–æ–º, —á—Ç–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ –∑–∞–º–µ—á–∞–µ—Ç —É—á–µ–Ω–∏–∫–æ–≤ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ',
    ])

    buttons = [[
        InlineKeyboardButton(text='1', callback_data=ANSWER_1),
        InlineKeyboardButton(text='2', callback_data=ANSWER_2),
        InlineKeyboardButton(text='3', callback_data=ANSWER_3),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_STUDENT_16


async def block1_student_16(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    answer_sentence_map = {
        ANSWER_1: '—É–º–µ–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –∑–Ω–∞–µ—Ç, –∫–∞–∫ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ –∏ –≤–æ–≤–ª–µ—á—å –≤ –Ω–µ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤',
        ANSWER_2: '–æ–±–ª–∞–¥–∞–µ—Ç –∫—É—á–µ–π —Ä–µ–≥–∞–ª–∏–π, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–Ω—ã–µ –∏ —Å–ø–æ—Ä–Ω—ã–µ –≤–µ—â–∏, –Ω–æ —Å –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–º –∞—Ä—Ç–∏—Å—Ç–∏–∑–º–æ–º',
        ANSWER_3: '—Å–∞–º –Ω–∞—Å—Ç–æ–ª—å–∫–æ —É–≤–ª–µ—á—ë–Ω —Å–≤–æ–∏–º –¥–µ–ª–æ–º, —á—Ç–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ –∑–∞–º–µ—á–∞–µ—Ç —É—á–µ–Ω–∏–∫–æ–≤ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ',
    }
    context.user_data[USER_DATA_BLOCK1_TEACHER_SENTENCES].append(answer_sentence_map[query.data])

    sentences = '\n'.join([f'- {i}' for i in context.user_data[USER_DATA_BLOCK1_TEACHER_SENTENCES]])
    text = f'–ò—Ç–∞–∫, –¥–ª—è –≤–∞—Å –æ—Ç–ª–∏—á–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:\n{sentences}'

    buttons = [[
        InlineKeyboardButton(text='–ù–µ–ø–ª–æ—Ö–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å!', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_STUDENT_17


async def block1_student_17(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '–ú—ã —Ç–æ–∂–µ —Ç–∞–∫ —Å—á–∏—Ç–∞–µ–º. –ù–∞—à–µ –≤–∏–¥–µ–Ω–∏–µ –æ—Ç–ª–∏—á–Ω–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –º—ã —É–ª–æ–∂–∏–ª–∏ –≤ —ç—Ç–æ—Ç —á–µ–∫-–ª–∏—Å—Ç. –í—ã –º–æ–∂–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å '
        '–µ–≥–æ –∏ —Å–≤–µ—Ä–∏—Ç—å—Å—è —Å –Ω–∏–º, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, —á—Ç–æ –≤—ã —É–∂–µ –∑–Ω–∞–µ—Ç–µ, —á—Ç–æ –ø—Ä–æ–±–æ–≤–∞–ª–∏, –∞ —á—Ç–æ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∏–∑—É—á–∏—Ç—å.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–°–∫–∞—á–∞—Ç—å —á–µ–∫-–ª–∏—Å—Ç!', callback_data=ANSWER_1),
        InlineKeyboardButton(text='–ò–¥–µ–º –¥–∞–ª—å—à–µ', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_STUDENT_18


async def block1_student_18(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    if query.data == ANSWER_1:
        await context.bot.copy_message(chat_id=update.effective_chat.id, from_chat_id=MEDIA_CHANNEL_ID,
                                       message_id=MEDIA_DOC_1)

    text = '\n'.join([
        '–ö–∞–∂–µ—Ç—Å—è, —Å —Ç–µ–º, –∫—Ç–æ —Ç–∞–∫–æ–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å, –≤—Å—ë —è—Å–Ω–æ. '
        '–ù–æ —á—Ç–æ –±–ª–∏–∂–µ –≤–∞–º ‚Äì –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ä–∞–±–æ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –ø—Ä–æ–≤–æ–¥–∏—Ç—å '
        '–≤–µ–±–∏–Ω–∞—Ä—ã –∏–ª–∏ –≤—Å–µ –≤–º–µ—Å—Ç–µ?',
        ' ',
        '–ú–æ–∂–µ–º –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤ —ç—Ç–æ–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ. '
        '–Ø –ø—Ä–µ–¥–ª–æ–∂—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ–∑–∏—Å–æ–≤, –∞ –≤—ã –æ—Ç–º–µ—Ç–∏—Ç–µ, –Ω–∞—Å–∫–æ–ª—å–∫–æ –æ–Ω–∏ –≤–∞–º –±–ª–∏–∑–∫–∏. –ü–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è –≤ –∏—Ç–æ–≥–µ.'
    ])

    buttons = [[
        InlineKeyboardButton(text='–ü–æ–µ—Ö–∞–ª–∏', callback_data=ANSWER_1),
        InlineKeyboardButton(text='–ò–¥–µ–º –¥–∞–ª—å—à–µ',
                             callback_data=ANSWER_5),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_TEACHER_1


async def block1_teacher_1(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    if query.data == ANSWER_5:
        return await block1_teacher_7(update, context)

    text = '\n'.join([
        '–ù–∞ —Ä–∞–±–æ—Ç–µ –≤—ã —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –¥–ª—è –Ω–æ–≤–∏—á–∫–∞, '
        '–ø–æ–¥—Ä–æ–±–Ω–æ –æ–±—ä—è—Å–Ω—è–µ—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, –ø–æ–º–æ–≥–∞–µ—Ç–µ –≤–Ω–∏–∫–Ω—É—Ç—å –≤ –∑–∞–¥–∞—á–∏.',
        '',
        '1 ‚Äî –¥–∞ / –µ—Å–ª–∏ –±—ã –±—ã–ª–∞ —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, —Ç–æ —Ç–∞–∫ –æ–Ω–æ –∏ –±—ã–ª–æ –±—ã',
        '2 ‚Äî –Ω–µ—Ç, —ç—Ç–æ –º–Ω–µ –Ω–µ –±–ª–∏–∑–∫–æ'
    ])

    buttons = [[
        InlineKeyboardButton(text='1', callback_data=ANSWER_1),
        InlineKeyboardButton(text='2', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_TEACHER_2


async def block1_teacher_2(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    context.user_data[USER_DATA_BLOCK1_TEACHER_QUIZ] = dict()
    context.user_data[USER_DATA_BLOCK1_TEACHER_QUIZ][LECTOR] = 1 if query.data == ANSWER_1 else 0

    text = '\n'.join([
        '–ï—Å–ª–∏ –≤–∞—à–µ–º—É –∫–æ–ª–ª–µ–≥–µ –Ω–µ–ø–æ–Ω—è—Ç–Ω–∞ –∑–∞–¥–∞—á–∞ –∏–ª–∏ –æ–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç –≤–Ω–∏–∫–∞—Ç—å –≤ '
        '—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –≤ –Ω–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å –∏ –∑–∞–¥–∞—ë—Ç –º–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –≤—ã '
        '–º–æ–∂–µ—Ç–µ —Å–ø–æ–∫–æ–π–Ω–æ –∫ —ç—Ç–æ–º—É –æ—Ç–Ω–µ—Å—Ç–∏—Å—å –∏ –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è.',
        '',
        '1 ‚Äî –¥–∞ / –µ—Å–ª–∏ –±—ã –±—ã–ª–∞ —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, —Ç–æ —Ç–∞–∫ –æ–Ω–æ –∏ –±—ã–ª–æ –±—ã',
        '2 ‚Äî –Ω–µ—Ç, —ç—Ç–æ –º–Ω–µ –Ω–µ –±–ª–∏–∑–∫–æ'
    ])

    buttons = [[
        InlineKeyboardButton(text='1', callback_data=ANSWER_1),
        InlineKeyboardButton(text='2', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_TEACHER_3


async def block1_teacher_3(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    context.user_data[USER_DATA_BLOCK1_TEACHER_QUIZ][LECTOR] += 1 if query.data == ANSWER_1 else 0

    text = '\n'.join([
        '–ö–æ–≥–¥–∞ –∫–æ–ª–ª–µ–≥–∏ –æ–±—Ä–∞—â–∞—é—Ç—Å—è –∫ –≤–∞–º –∑–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑—å—é –ø–æ –∏—Ö —Ä–∞–±–æ—Ç–µ, –≤—ã –æ—Ç–º–µ—á–∞–µ—Ç–µ, '
        '—á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, –∞ —á—Ç–æ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã —Å–¥–µ–ª–∞—Ç—å –ø–æ-–¥—Ä—É–≥–æ–º—É. '
        '–í–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –¥–∞–≤–∞—Ç—å —Ñ–∏–¥–±—ç–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º —Ä–∞—Å—Ç–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è.',
        '',
        '1 ‚Äî –¥–∞ / –µ—Å–ª–∏ –±—ã –±—ã–ª–∞ —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, —Ç–æ —Ç–∞–∫ –æ–Ω–æ –∏ –±—ã–ª–æ –±—ã',
        '2 ‚Äî –Ω–µ—Ç, —ç—Ç–æ –º–Ω–µ –Ω–µ –±–ª–∏–∑–∫–æ'
    ])

    buttons = [[
        InlineKeyboardButton(text='1', callback_data=ANSWER_1),
        InlineKeyboardButton(text='2', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_TEACHER_4


async def block1_teacher_4(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    context.user_data[USER_DATA_BLOCK1_TEACHER_QUIZ][COACH] = 1 if query.data == ANSWER_1 else 0

    text = '\n'.join([
        '–ï—Å–ª–∏ –≤–∞—à –∫–æ–ª–ª–µ–≥–∞ —Å–æ–≤–µ—Ä—à–∞–µ—Ç –æ—à–∏–±–∫—É, –≤—ã –º–æ–∂–µ—Ç–µ –±–µ—Ä–µ–∂–Ω–æ –ø–æ–º–æ—á—å –µ–º—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è'
        ' –≤ —Å–∏—Ç—É–∞—Ü–∏–∏ ‚Äî –ø–æ–Ω—è—Ç—å, —á—Ç–æ –∫ —ç—Ç–æ–π –æ—à–∏–±–∫–µ –ø—Ä–∏–≤–µ–ª–æ –∏ —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é.'
        '',
        '1 ‚Äî –¥–∞ / –µ—Å–ª–∏ –±—ã –±—ã–ª–∞ —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, —Ç–æ —Ç–∞–∫ –æ–Ω–æ –∏ –±—ã–ª–æ –±—ã',
        '2 ‚Äî –Ω–µ—Ç, —ç—Ç–æ –º–Ω–µ –Ω–µ –±–ª–∏–∑–∫–æ'
    ])

    buttons = [[
        InlineKeyboardButton(text='1', callback_data=ANSWER_1),
        InlineKeyboardButton(text='2', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_TEACHER_5


async def block1_teacher_5(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    context.user_data[USER_DATA_BLOCK1_TEACHER_QUIZ][COACH] += 1 if query.data == ANSWER_1 else 0

    text = """–í–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –æ–±—Å—É–∂–¥–∞—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏ –∏–ª–∏ –∫–æ–ª–ª–µ–≥–∞–º–∏ —Ä–∞–∑–Ω—ã–µ —Ç–µ–º—ã. –í—ã –º–æ–∂–µ—Ç–µ –æ–±—ä—è—Å–Ω–∏—Ç—å —Å–∞–º–æ–µ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ –∏ —Å–ª–æ–∂–Ω–æ–µ —è–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏, –ø–æ–¥–æ–±—Ä–∞—Ç—å —è—Ä–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—é –ø–æ–∑–∏—Ü–∏—é.

1 ‚Äî –¥–∞ / –µ—Å–ª–∏ –±—ã –±—ã–ª–∞ —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, —Ç–æ —Ç–∞–∫ –æ–Ω–æ –∏ –±—ã–ª–æ –±—ã
2 ‚Äî –Ω–µ—Ç, —ç—Ç–æ –º–Ω–µ –Ω–µ –±–ª–∏–∑–∫–æ"""

    buttons = [[
        InlineKeyboardButton(text='1', callback_data=ANSWER_1),
        InlineKeyboardButton(text='2', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_TEACHER_6


async def block1_teacher_6(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    context.user_data[USER_DATA_BLOCK1_TEACHER_QUIZ][AUTHOR] = 1 if query.data == ANSWER_1 else 0

    text = '\n'.join([
        '–í—ã –ø–∏—à–µ—Ç–µ —Å—Ç–∞—Ç—å–∏ –∏–ª–∏ –≤–µ–¥—ë—Ç–µ —Å–≤–æ–π –∫–∞–Ω–∞–ª / –±–ª–æ–≥ –æ'
        ' –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –≥–¥–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç–µ –æ —Ç–æ–Ω–∫–æ—Å—Ç—è—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏. '
        '–ò–ª–∏ –∑–∞–¥—É–º—ã–≤–∞–ª–∏—Å—å –æ —Ç–∞–∫–æ–º –≤–∏–¥–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –ø–æ—Ç–æ–º—É —á—Ç–æ —É –≤–∞—Å –∫–ª–∞—Å—Å–Ω–æ'
        ' –ø–æ–ª—É—á–∞–µ—Ç—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –∏ –µ—Å—Ç—å –∂–µ–ª–∞–Ω–∏–µ –¥–µ–ª–∏—Ç—å—Å—è –∏–º–∏.',
        '',
        '1 ‚Äî –¥–∞ / –µ—Å–ª–∏ –±—ã –±—ã–ª–∞ —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, —Ç–æ —Ç–∞–∫ –æ–Ω–æ –∏ –±—ã–ª–æ –±—ã',
        '2 ‚Äî –Ω–µ—Ç, —ç—Ç–æ –º–Ω–µ –Ω–µ –±–ª–∏–∑–∫–æ'
    ])

    buttons = [[
        InlineKeyboardButton(text='1', callback_data=ANSWER_1),
        InlineKeyboardButton(text='2', callback_data=ANSWER_2),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_TEACHER_7


async def block1_teacher_7(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    if query.data in [ANSWER_1, ANSWER_2]:
        context.user_data[USER_DATA_BLOCK1_TEACHER_QUIZ][AUTHOR] += 1 if query.data == ANSWER_1 else 0

        teacher_quiz = context.user_data[USER_DATA_BLOCK1_TEACHER_QUIZ]
        if teacher_quiz[LECTOR] == teacher_quiz[COACH] == teacher_quiz[AUTHOR]:
            text = '\n'.join([
                f'–ö–∞–∂–µ—Ç—Å—è, –≤–∞–º –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞ —Ä–æ–ª—å {LECTOR}–∞.',
                '   ',
                '–í '
                '–ù–µ—Ç–æ–ª–æ–≥–∏–∏ –ª–µ–∫—Ç–æ—Ä –ø—Ä–æ–≤–æ–¥–∏—Ç –ª–µ–∫—Ü–∏–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∏–ª–∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ–±—É—á–∞—é—â–∏–µ –≤–∏–¥–µ–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. '
                '–¢—Ä–µ–Ω–µ—Ä '
                '–∏–ª–∏ –¥–∏–ø–ª–æ–º–Ω—ã–π —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –¥–∞—ë—Ç —Ä–∞–∑–≤–∏–≤–∞—é—â—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å. –ê–≤—Ç–æ—Ä —Å–æ–∑–¥–∞—ë—Ç'
                '–æ–±—É—á–∞—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç.',
                '   ',
                '–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å –ù–µ—Ç–æ–ª–æ–≥–∏–µ–π ‚Äì '
                '–æ—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –ø–æ <a href="https://netology.ru/experts#contact">—Å—Å—ã–ª–∫–µ</a>.',
            ])
        else:
            most_favourite = max(teacher_quiz, key=teacher_quiz.get)
            least_favourite = min(teacher_quiz, key=teacher_quiz.get)
            text = '\n'.join([
                f'–ö–∞–∂–µ—Ç—Å—è, –≤–∞–º –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞ —Ä–æ–ª—å <b>{most_favourite}–∞</b>.',
                f'–ú–æ–∂–µ—Ç –±—ã—Ç—å —Ä–æ–ª—å <b>{least_favourite}–∞</b> –±—É–¥–µ—Ç –≤–∞–º –Ω–µ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞.',
                '   ',
                '–í—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É—Å–ª–æ–≤–Ω—ã. –ï—Å–ª–∏ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞ –ª—é–±–∞—è —Ä–æ–ª—å '
                '–∏–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏–µ –≤ —Ü–µ–ª–æ–º ‚Äì —ç—Ç–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –°—Ç–æ–∏—Ç –ø—Ä–æ–±–æ–≤–∞—Ç—å –∏ –ø–æ–±–ª–∏–∂–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–µ–º, '
                '—á—Ç–æ –≤–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –¥–µ–ª–∞—Ç—å –≤ —Ä–∞–º–∫–∞—Ö —ç—Ç–∏—Ö —Ä–æ–ª–µ–π.',
                '   ',
                '–í –ù–µ—Ç–æ–ª–æ–≥–∏–∏ –ª–µ–∫—Ç–æ—Ä –ø—Ä–æ–≤–æ–¥–∏—Ç –ª–µ–∫—Ü–∏–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ '
                '–∏–ª–∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ–±—É—á–∞—é—â–∏–µ –≤–∏–¥–µ–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. –¢—Ä–µ–Ω–µ—Ä –∏–ª–∏ –¥–∏–ø–ª–æ–º–Ω—ã–π —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—ã '
                '—Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –¥–∞—ë—Ç —Ä–∞–∑–≤–∏–≤–∞—é—â—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å. –ê–≤—Ç–æ—Ä —Å–æ–∑–¥–∞—ë—Ç –æ–±—É—á–∞—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç.',
                '   ',
                '–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å '
                '–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å –ù–µ—Ç–æ–ª–æ–≥–∏–µ–π ‚Äì '
                '–æ—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –ø–æ <a href="https://netology.ru/experts#contact">—Å—Å—ã–ª–∫–µ</a>.',
            ])

        await context.bot.send_message(chat_id=update.effective_chat.id, text=text, disable_web_page_preview=True,
                                       parse_mode=ParseMode.HTML)

        await asleep(5)

    text = '\n'.join([
        '–£ –Ω–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–±—ã—Ç–∏–π. ',
        '',
        '–ü–µ—Ä–≤—ã–π: —è –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –≤—Å—ë–º –æ–ø—ã—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è –ø–æ—ç—Ç–∞–ø–Ω–æ.'
        ' –ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –∑–∞–Ω—è—Ç–∏—é, –ø—Ä–æ–≤–µ—Å—Ç–∏ –µ–≥–æ, –ø—Ä–∏–¥—É–º–∞—Ç—å –∫–ª–∞—Å—Å–Ω—ã–µ '
        '–¥–æ–º–∞—à–∫–∏ –∏ –¥–∞—Ç—å —Ä–∞–∑–≤–∏–≤–∞—é—â—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Å—Ç—É–¥–µ–Ω—Ç–∞–º. –í –∫–æ–Ω—Ü–µ –ø–æ–≥–æ–≤–æ—Ä–∏–º'
        ' –æ —Ç–æ–º, —á—Ç–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å ‚Äî —Ç–æ–∂–µ —á–µ–ª–æ–≤–µ–∫, –æ–Ω –º–æ–∂–µ—Ç –æ—à–∏–±–∞—Ç—å—Å—è –∏ –Ω–µ –∑–Ω–∞—Ç—å –≤—Å–µ–≥–æ '
        '–Ω–∞ —Å–≤–µ—Ç–µ. –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å, –∫–∞–∫ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Å–µ–±—è –∏ –Ω–µ –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞—Ç—å —Å–≤–æ—é —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—É.'
        '',
        '–í—Ç–æ—Ä–æ–π: –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∞—Å–ø–µ–∫—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è, '
        '–∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –Ω–∞–∏–±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω. –ù–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–ª–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è.',
        '   ',
        '–ü–æ –∫–∞–∫–æ–º—É –ø—É—Ç–∏ –ø–æ–π—Ç–∏ ‚Äî —Ä–µ—à–∞—Ç—å –≤–∞–º.',
    ])

    buttons = [[
        InlineKeyboardButton(text='–ë—É–¥—É –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å –∫—É—Ä—Å', callback_data=ANSWER_1)
    ], [
        InlineKeyboardButton(text='–ö —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É!', callback_data=ANSWER_2)
    ], [
        InlineKeyboardButton(text='–•–æ—á—É –≤—ã–±—Ä–∞—Ç—å —Å–∞–º', callback_data=ANSWER_3)
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK1_FINISH_1


block1_states = {

    BLOCK1_INTRO: [
        MessageHandler(filters.TEXT & ~filters.COMMAND, block1_intro)],
    BLOCK1_INTRODUCTION_SURNAME: [
        MessageHandler(filters.TEXT & ~filters.COMMAND, block1_introduction_surname)],
    BLOCK1_INTRODUCTION_EMAIL: [MessageHandler(filters.TEXT & ~filters.COMMAND, block1_introduction_email)],
    BLOCK1_INTRODUCTION_SPECIALITY: [
        MessageHandler(filters.TEXT & ~filters.COMMAND, block1_introduction_speciality)],
    BLOCK1_INTRODUCTION_LEVEL: [MessageHandler(filters.TEXT & ~filters.COMMAND, block1_introduction_level)],
    BLOCK1_INTRODUCTION_EXPECTATIONS: [CallbackQueryHandler(block1_introduction_expectations)],

    BLOCK1_INTRODUCTION_SUMMARY_1: [
        MessageHandler(filters.TEXT & ~filters.COMMAND, block1_introduction_summary_1)],
    BLOCK1_INTRODUCTION_SUMMARY_2: [CallbackQueryHandler(block1_introduction_summary_2)],
    BLOCK1_INTRODUCTION_SUMMARY_3: [CallbackQueryHandler(block1_introduction_summary_3)],
    BLOCK1_INTRODUCTION_SUMMARY_4: [CallbackQueryHandler(block1_introduction_summary_4)],

    BLOCK1_INTRODUCTION_ROLES_1: [
        CallbackQueryHandler(block1_introduction_roles_1, pattern=ANSWER_1),
        CallbackQueryHandler(block1_quiz_1, pattern=ANSWER_2),
    ],
    BLOCK1_INTRODUCTION_ROLES_2: [CallbackQueryHandler(block1_introduction_roles_2)],

    BLOCK1_QUIZ_1: [CallbackQueryHandler(block1_quiz_1)],
    BLOCK1_QUIZ_2: [CallbackQueryHandler(block1_quiz_2)],
    BLOCK1_QUIZ_3: [CallbackQueryHandler(block1_quiz_3)],
    BLOCK1_QUIZ_4: [CallbackQueryHandler(block1_quiz_4)],
    BLOCK1_QUIZ_5: [CallbackQueryHandler(block1_quiz_5)],
    BLOCK1_QUIZ_6: [CallbackQueryHandler(block1_quiz_6)],
    BLOCK1_QUIZ_7: [CallbackQueryHandler(block1_quiz_7)],
    BLOCK1_QUIZ_8: [CallbackQueryHandler(block1_quiz_8)],
    BLOCK1_QUIZ_9: [CallbackQueryHandler(block1_quiz_9)],
    BLOCK1_QUIZ_10: [CallbackQueryHandler(block1_quiz_10)],
    BLOCK1_QUIZ_11: [CallbackQueryHandler(block1_quiz_11)],
    BLOCK1_QUIZ_12: [CallbackQueryHandler(block1_quiz_12)],
    BLOCK1_QUIZ_13: [CallbackQueryHandler(block1_quiz_13)],
    BLOCK1_QUIZ_14: [CallbackQueryHandler(block1_quiz_14)],
    BLOCK1_QUIZ_15: [CallbackQueryHandler(block1_quiz_15)],
    BLOCK1_QUIZ_16: [CallbackQueryHandler(block1_quiz_16)],

    BLOCK1_STUDENT_1: [CallbackQueryHandler(block1_student_1)],
    BLOCK1_STUDENT_2: [CallbackQueryHandler(block1_student_2)],
    BLOCK1_STUDENT_3: [CallbackQueryHandler(block1_student_3)],
    BLOCK1_STUDENT_4: [CallbackQueryHandler(block1_student_4)],
    BLOCK1_STUDENT_5: [CallbackQueryHandler(block1_student_5)],
    BLOCK1_STUDENT_6: [CallbackQueryHandler(block1_student_6)],
    BLOCK1_STUDENT_7: [CallbackQueryHandler(block1_student_7)],
    BLOCK1_STUDENT_8: [CallbackQueryHandler(block1_student_8)],
    BLOCK1_STUDENT_9: [CallbackQueryHandler(block1_student_9)],
    BLOCK1_STUDENT_10: [CallbackQueryHandler(block1_student_10)],
    BLOCK1_STUDENT_11: [CallbackQueryHandler(block1_student_11)],
    BLOCK1_STUDENT_12: [CallbackQueryHandler(block1_student_12)],
    BLOCK1_STUDENT_13: [CallbackQueryHandler(block1_student_13)],
    BLOCK1_STUDENT_14: [CallbackQueryHandler(block1_student_14)],
    BLOCK1_STUDENT_15: [CallbackQueryHandler(block1_student_15)],
    BLOCK1_STUDENT_16: [CallbackQueryHandler(block1_student_16)],
    BLOCK1_STUDENT_17: [CallbackQueryHandler(block1_student_17)],
    BLOCK1_STUDENT_18: [CallbackQueryHandler(block1_student_18)],

    BLOCK1_TEACHER_1: [CallbackQueryHandler(block1_teacher_1)],
    BLOCK1_TEACHER_2: [CallbackQueryHandler(block1_teacher_2)],
    BLOCK1_TEACHER_3: [CallbackQueryHandler(block1_teacher_3)],
    BLOCK1_TEACHER_4: [CallbackQueryHandler(block1_teacher_4)],
    BLOCK1_TEACHER_5: [CallbackQueryHandler(block1_teacher_5)],
    BLOCK1_TEACHER_6: [CallbackQueryHandler(block1_teacher_6)],
    BLOCK1_TEACHER_7: [CallbackQueryHandler(block1_teacher_7)],

    BLOCK1_FINISH_1: [
        CallbackQueryHandler(block1_final, pattern=ANSWER_1),
        CallbackQueryHandler(block2_intro, pattern=ANSWER_2),
        CallbackQueryHandler(block1_finish_1, pattern=ANSWER_3),
    ],
    BLOCK1_FINISH_2: [
        CallbackQueryHandler(block2_intro, pattern=ANSWER_1),
        CallbackQueryHandler(block3_intro, pattern=ANSWER_2),
        CallbackQueryHandler(block4_intro, pattern=ANSWER_3),
        CallbackQueryHandler(block5_intro, pattern=ANSWER_4),
    ],

}
