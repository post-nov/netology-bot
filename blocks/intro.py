from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.constants import ParseMode
from telegram.ext import ContextTypes, CallbackQueryHandler

from constants import *
from utils import asleep


async def block1_intro(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """Select an action: Adding parent/child or show data."""
    query = update.callback_query
    if query:
        await query.answer()

    text = '\n'.join([
        "–ü—Ä–∏–≤–µ—Ç! üëãüèº",
        "–†–∞–¥ –≤–∏–¥–µ—Ç—å –≤–∞—Å –Ω–∞ –∫—É—Ä—Å–µ!",
        '',
        "–ú–µ–Ω—è –∑–æ–≤—É—Ç –°–∞—à–∞, —è ‚Äî –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –ù–µ—Ç–æ–ª–æ–≥–∏–∏. "
        "–ü—Ä–µ–¥–ª–∞–≥–∞—é –≤–º–µ—Å—Ç–µ —Å–æ –º–Ω–æ–π –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è–º–∏ –æ–Ω–ª–∞–π–Ω-–ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è.",
        "",
        "–ê –∫–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç? –ù–∞–ø–∏—à–∏—Ç–µ –∏–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.",
    ])

    if query:
        await update.callback_query.message.reply_text(text=text)
    else:
        await update.message.reply_text(text=text)

    return BLOCK1_INTRODUCTION_SURNAME


async def block2_intro(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    await context.bot.copy_message(chat_id=update.effective_chat.id, from_chat_id=MEDIA_CHANNEL_ID,
                                   message_id=MEDIA_PHOTO_5)
    text = '\n'.join([
        '–ó–∞ –∫–∞–∂–¥—ã–º –≤–µ–±–∏–Ω–∞—Ä–æ–º, –ø—Ä—è–º—ã–º —ç—Ñ–∏—Ä–æ–º –∏ –¥–æ–º–∞—à–∫–æ–π –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞ —Å—Ç–æ–∏—Ç –æ–≥—Ä–æ–º–Ω—ã–π —ç—Ç–∞–ø –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏. –¢–æ, —á—Ç–æ –≤–∏–¥—è—Ç '
        '—Å—Ç—É–¥–µ–Ω—Ç—ã, ‚Äî —ç—Ç–æ –ª–∏—à—å –≤–µ—Ä—Ö—É—à–∫–∞ –∞–π—Å–±–µ—Ä–≥–∞'
    ])

    buttons = [[
        InlineKeyboardButton(text='–ó–≤—É—á–∏—Ç —Å–µ—Ä—å–µ–∑–Ω–æ', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard)

    return BLOCK2_INTRO_1


async def block3_intro(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    if query:
        await query.answer()

    text = '\n'.join([
        '–í—ã —É–∂–µ –∑–Ω–∞–µ—Ç–µ, —á—Ç–æ –æ–±—É—á–µ–Ω–∏–µ –≤ –æ–Ω–ª–∞–π–Ω–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ—Ñ–ª–∞–π–Ω–∞. –ú–æ–π –¥—Ä—É–≥ –∏ '
        '–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –ù–µ—Ç–æ–ª–æ–≥–∏–∏ –ï–≤–≥–µ–Ω–∏–π –ö–æ—Ä—ã—Ç–æ–≤ –ø–æ–¥—Ä–æ–±–Ω–µ–µ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç, –≤ —á—ë–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å –≤–µ–±–∏–Ω–∞—Ä–æ–≤ '
        '–∏ –∫–∞–∫ –∫ –Ω–∏–º –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è.',
    ])
    await context.bot.send_message(chat_id=update.effective_chat.id, text=text, disable_web_page_preview=True,
                                   parse_mode=ParseMode.HTML)

    await asleep(3)

    await context.bot.copy_message(chat_id=update.effective_chat.id, from_chat_id=MEDIA_CHANNEL_ID,
                                   message_id=MEDIA_BLOCK3_VIDEO_1)

    await asleep(10)

    text = '\n'.join([
        '–î–ª—è –∑–∞–Ω—è—Ç–∏—è –≤–∞–∂–Ω–æ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ö–æ—Ä–æ—à–µ–µ –º–µ—Å—Ç–æ. –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤. ',
        '1. –Ø—Ä–∫–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ, –Ω–æ –±–µ–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ —Å–≤–µ—Ç–∞ –∑–∞ —Å–ø–∏–Ω–æ–π: –∏–Ω–∞—á–µ –≤–∞—Å –±—É–¥–µ—Ç –ø–ª–æ—Ö–æ –≤–∏–¥–Ω–æ. ',
        '2. –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Ñ–æ–Ω —Å–ø–æ–∫–æ–π–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞, –±–µ–∑ –æ–±–∏–ª–∏—è –º–µ–ª–∫–∏—Ö –¥–µ—Ç–∞–ª–µ–π. ',
        '3. –í–æ –≤—Ä–µ–º—è –≤—Å–µ–≥–æ –∑–∞–Ω—è—Ç–∏—è –≤ –ø–æ–º–µ—â–µ–Ω–∏–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ç–∏—à–∏–Ω–∞.',
    ])

    buttons = [[
        InlineKeyboardButton(text='–ö–∞–∂–µ—Ç—Å—è, —Ä–∞–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å –∑–∞–Ω—è—Ç–∏–µ...', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    if query:
        await update.callback_query.message.reply_text(text, reply_markup=keyboard, disable_web_page_preview=True,
                                                       parse_mode=ParseMode.HTML)
    else:
        await update.message.reply_text(text, reply_markup=keyboard, disable_web_page_preview=True,
                                        parse_mode=ParseMode.HTML)

    return BLOCK3_INTRO_1


async def block4_intro(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    await query.answer()

    text = '\n'.join([
        '–ü–æ—Å–ª–µ –∑–∞–Ω—è—Ç–∏—è —á–∞—â–µ –≤—Å–µ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ. –°–µ–π—á–∞—Å –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –æ —Ç–æ–º, '
        '–∫–∞–∫ –µ–≥–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å.',
        '    ',
        '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é –≤–∞–∂–Ω–æ –¥–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—É —Ä–∞–∑–≤–∏–≤–∞—é—â—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π –∑–∞—Ö–æ—á–µ—Ç—Å—è '
        '–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ, –∞ –Ω–µ –∑–∞–±—Ä–æ—Å–∏—Ç—å —É—á—ë–±—É –Ω–∞–¥–æ–ª–≥–æ :)',
    ])
    buttons = [[
        InlineKeyboardButton(text='–†–∞–∑–≤–∏–≤–∞—é—â–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å?', callback_data=DUMMY),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(text, reply_markup=keyboard, disable_web_page_preview=True,
                                                   parse_mode=ParseMode.HTML)

    return BLOCK4_INTRO_1


async def block5_intro(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    query = update.callback_query
    if query:
        await query.answer()

    text = '\n'.join([
        '–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –≤ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã —Å—Ç–∞–ª–∫–∏–≤–∞—é—Ç—Å—è —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç—Ä–∞—Ö–∞–º–∏ –∏ —Å–æ–º–Ω–µ–Ω–∏—è–º–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, '
        '–Ω–µ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å —Å—Ç—É–¥–µ–Ω—Ç–∞, –¥–æ–ø—É—Å—Ç–∏—Ç—å –æ—à–∏–±–∫—É –ø—Ä–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏ —Ç. –¥.',
        '   ',
        '–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è '
        '–≤–∞–∂–Ω—ã–º –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –æ —Ç–æ–º, —á—Ç–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ —Ç–æ–∂–µ –ª—é–¥–∏. –û–Ω–∏ –º–æ–≥—É—Ç –æ—à–∏–±–∞—Ç—å—Å—è, —Å–æ–º–Ω–µ–≤–∞—Ç—å—Å—è –∏ —á–µ–≥–æ-—Ç–æ –Ω–µ –∑–Ω–∞—Ç—å.',
        '  ',
        '–ù–∞—á–Ω—ë–º —Å —Å–∞–º–æ–≥–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ: <b>¬´–ê —á—Ç–æ, –µ—Å–ª–∏ —è –æ—à–∏–±—É—Å—å?¬ª</b> –ù–∞–ø—Ä–∏–º–µ—Ä, '
        '–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—á—É –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ —Å–∫–∞–∂—É '
        '—á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ, –∫–æ–≥–¥–∞ –±—É–¥—É –æ–±—ä—è—Å–Ω—è—Ç—å –Ω–æ–≤—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª.',
        '   ',
        '–ü—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –≤–º–µ—Å—Ç–µ, —á—Ç–æ –≤ —Ç–∞–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –ª—É—á—à–µ —Å–¥–µ–ª–∞—Ç—å. ',
        '',
        '1. –°–¥–µ–ª–∞—Ç—å –≤–∏–¥, —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ.',
        '2. –ü—Ä–∏–∑–Ω–∞—Ç—å –æ—à–∏–±–∫—É –∏ —Ä–∞–∑–æ–±—Ä–∞—Ç—å –µ—ë. ',
        '3. –°–æ–æ–±—â–∏—Ç—å –ø—Ä–∏—á–∏–Ω—É, '
        '–ø–æ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –æ—à–∏–±–ª–∏—Å—å: —É—Å—Ç–∞–ª–æ—Å—Ç—å, –ø—Ä–æ–±–ª–µ–º—ã –≤ —Å–µ–º—å–µ –∏ —Ç. –¥.',
    ])

    buttons = [[
        InlineKeyboardButton(text='1', callback_data=ANSWER_1),
        InlineKeyboardButton(text='2', callback_data=ANSWER_2),
        InlineKeyboardButton(text='3', callback_data=ANSWER_3),
    ]]
    keyboard = InlineKeyboardMarkup(buttons)

    if query:
        await update.callback_query.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)
    else:
        await update.message.reply_text(text, reply_markup=keyboard, parse_mode=ParseMode.HTML)

    return BLOCK5_INTRO_1


intro_query_handlers = [
    CallbackQueryHandler(block1_intro, pattern=BLOCK1_INTRO),
    CallbackQueryHandler(block2_intro, pattern=BLOCK2_INTRO),
    CallbackQueryHandler(block3_intro, pattern=BLOCK3_INTRO),
    CallbackQueryHandler(block4_intro, pattern=BLOCK4_INTRO),
    CallbackQueryHandler(block5_intro, pattern=BLOCK5_INTRO),
]
